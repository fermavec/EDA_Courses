{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"14 DateTime /  Data Viz","provenance":[],"authorship_tag":"ABX9TyN7ewESlcskbx4V9C2uKos9"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["#**Trabajando con datetime**"],"metadata":{"id":"aHG1RYxxVvf6"}},{"cell_type":"code","execution_count":110,"metadata":{"id":"3jtrOkNYVsZi","executionInfo":{"status":"ok","timestamp":1641600418844,"user_tz":360,"elapsed":234,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive/')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Fs5cIF7eV4AX","executionInfo":{"status":"ok","timestamp":1641600420595,"user_tz":360,"elapsed":1240,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"e46d391d-23e2-4e66-c0d2-e0bbc7de57ef"},"execution_count":111,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive/; to attempt to forcibly remount, call drive.mount(\"/content/drive/\", force_remount=True).\n"]}]},{"cell_type":"code","source":["%cd '/content/drive/MyDrive/Colab Notebooks/db'\n","%ls"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hquAJ6ifWJOn","executionInfo":{"status":"ok","timestamp":1641600420596,"user_tz":360,"elapsed":46,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"dd9b43bf-ac38-49d8-dc56-cd9e416eb75b"},"execution_count":112,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/Colab Notebooks/db\n","API_SP.POP.TOTL_DS2_en_csv_v2_3469297.csv\n","archivo_excel.xlsx\n","archivo.hdf\n","archivo.json\n","archivo.parquet\n","archivo.pkl\n","covid_19_data.csv\n","dataframebybar.csv\n","dataframe.csv\n","london_merged.csv\n","Metadata_Country_API_SP.POP.TOTL_DS2_en_csv_v2_3469297.csv\n","Metadata_Indicator_API_SP.POP.TOTL_DS2_en_csv_v2_3469297.csv\n","Meteorite_Landings.csv\n","poblacion.csv\n"]}]},{"cell_type":"code","source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/db/covid_19_data.csv')\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"rzm_9AQpWbef","executionInfo":{"status":"ok","timestamp":1641600420598,"user_tz":360,"elapsed":43,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"cd2e148b-1e05-4ded-e282-ea06ba438a2a"},"execution_count":113,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-ff29cd32-e386-4223-ac72-197987e46d93\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>SNo</th>\n","      <th>ObservationDate</th>\n","      <th>Province/State</th>\n","      <th>Country/Region</th>\n","      <th>Last Update</th>\n","      <th>Confirmed</th>\n","      <th>Deaths</th>\n","      <th>Recovered</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>01/22/2020</td>\n","      <td>Anhui</td>\n","      <td>Mainland China</td>\n","      <td>1/22/2020 17:00</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>01/22/2020</td>\n","      <td>Beijing</td>\n","      <td>Mainland China</td>\n","      <td>1/22/2020 17:00</td>\n","      <td>14.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>01/22/2020</td>\n","      <td>Chongqing</td>\n","      <td>Mainland China</td>\n","      <td>1/22/2020 17:00</td>\n","      <td>6.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>01/22/2020</td>\n","      <td>Fujian</td>\n","      <td>Mainland China</td>\n","      <td>1/22/2020 17:00</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>01/22/2020</td>\n","      <td>Gansu</td>\n","      <td>Mainland China</td>\n","      <td>1/22/2020 17:00</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3390</th>\n","      <td>3391</td>\n","      <td>03/04/2020</td>\n","      <td>NaN</td>\n","      <td>Ukraine</td>\n","      <td>2020-03-03T15:33:02</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3391</th>\n","      <td>3392</td>\n","      <td>03/04/2020</td>\n","      <td>From Diamond Princess</td>\n","      <td>Australia</td>\n","      <td>2020-02-29T02:03:10</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3392</th>\n","      <td>3393</td>\n","      <td>03/04/2020</td>\n","      <td>Lackland, TX (From Diamond Princess)</td>\n","      <td>US</td>\n","      <td>2020-02-24T23:33:02</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3393</th>\n","      <td>3394</td>\n","      <td>03/04/2020</td>\n","      <td>Omaha, NE (From Diamond Princess)</td>\n","      <td>US</td>\n","      <td>2020-02-24T23:33:02</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3394</th>\n","      <td>3395</td>\n","      <td>03/04/2020</td>\n","      <td>Travis, CA (From Diamond Princess)</td>\n","      <td>US</td>\n","      <td>2020-02-24T23:33:02</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3395 rows Ã— 8 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ff29cd32-e386-4223-ac72-197987e46d93')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ff29cd32-e386-4223-ac72-197987e46d93 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ff29cd32-e386-4223-ac72-197987e46d93');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["       SNo ObservationDate  ... Deaths Recovered\n","0        1      01/22/2020  ...    0.0       0.0\n","1        2      01/22/2020  ...    0.0       0.0\n","2        3      01/22/2020  ...    0.0       0.0\n","3        4      01/22/2020  ...    0.0       0.0\n","4        5      01/22/2020  ...    0.0       0.0\n","...    ...             ...  ...    ...       ...\n","3390  3391      03/04/2020  ...    0.0       0.0\n","3391  3392      03/04/2020  ...    0.0       0.0\n","3392  3393      03/04/2020  ...    0.0       0.0\n","3393  3394      03/04/2020  ...    0.0       0.0\n","3394  3395      03/04/2020  ...    0.0       0.0\n","\n","[3395 rows x 8 columns]"]},"metadata":{},"execution_count":113}]},{"cell_type":"code","source":["df.dtypes"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lFwxIpRjXfn2","executionInfo":{"status":"ok","timestamp":1641600420599,"user_tz":360,"elapsed":43,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"3bf8ffb8-de33-4386-e2d0-b018713a66b2"},"execution_count":114,"outputs":[{"output_type":"execute_result","data":{"text/plain":["SNo                  int64\n","ObservationDate     object\n","Province/State      object\n","Country/Region      object\n","Last Update         object\n","Confirmed          float64\n","Deaths             float64\n","Recovered          float64\n","dtype: object"]},"metadata":{},"execution_count":114}]},{"cell_type":"code","source":["#Convirtiendo en tiempo la columna dia de observacion\n","df.ObservationDate = pd.to_datetime(df.ObservationDate)\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"YEfN7kwQWzou","executionInfo":{"status":"ok","timestamp":1641600420600,"user_tz":360,"elapsed":41,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"5150531a-26bc-46ba-ada9-223acb4860db"},"execution_count":115,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-99f6e79e-7e5c-4204-b7c0-0a7c81aecdfa\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>SNo</th>\n","      <th>ObservationDate</th>\n","      <th>Province/State</th>\n","      <th>Country/Region</th>\n","      <th>Last Update</th>\n","      <th>Confirmed</th>\n","      <th>Deaths</th>\n","      <th>Recovered</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>2020-01-22</td>\n","      <td>Anhui</td>\n","      <td>Mainland China</td>\n","      <td>1/22/2020 17:00</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>2020-01-22</td>\n","      <td>Beijing</td>\n","      <td>Mainland China</td>\n","      <td>1/22/2020 17:00</td>\n","      <td>14.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>2020-01-22</td>\n","      <td>Chongqing</td>\n","      <td>Mainland China</td>\n","      <td>1/22/2020 17:00</td>\n","      <td>6.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>2020-01-22</td>\n","      <td>Fujian</td>\n","      <td>Mainland China</td>\n","      <td>1/22/2020 17:00</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>2020-01-22</td>\n","      <td>Gansu</td>\n","      <td>Mainland China</td>\n","      <td>1/22/2020 17:00</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3390</th>\n","      <td>3391</td>\n","      <td>2020-03-04</td>\n","      <td>NaN</td>\n","      <td>Ukraine</td>\n","      <td>2020-03-03T15:33:02</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3391</th>\n","      <td>3392</td>\n","      <td>2020-03-04</td>\n","      <td>From Diamond Princess</td>\n","      <td>Australia</td>\n","      <td>2020-02-29T02:03:10</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3392</th>\n","      <td>3393</td>\n","      <td>2020-03-04</td>\n","      <td>Lackland, TX (From Diamond Princess)</td>\n","      <td>US</td>\n","      <td>2020-02-24T23:33:02</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3393</th>\n","      <td>3394</td>\n","      <td>2020-03-04</td>\n","      <td>Omaha, NE (From Diamond Princess)</td>\n","      <td>US</td>\n","      <td>2020-02-24T23:33:02</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3394</th>\n","      <td>3395</td>\n","      <td>2020-03-04</td>\n","      <td>Travis, CA (From Diamond Princess)</td>\n","      <td>US</td>\n","      <td>2020-02-24T23:33:02</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3395 rows Ã— 8 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-99f6e79e-7e5c-4204-b7c0-0a7c81aecdfa')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-99f6e79e-7e5c-4204-b7c0-0a7c81aecdfa button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-99f6e79e-7e5c-4204-b7c0-0a7c81aecdfa');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["       SNo ObservationDate  ... Deaths Recovered\n","0        1      2020-01-22  ...    0.0       0.0\n","1        2      2020-01-22  ...    0.0       0.0\n","2        3      2020-01-22  ...    0.0       0.0\n","3        4      2020-01-22  ...    0.0       0.0\n","4        5      2020-01-22  ...    0.0       0.0\n","...    ...             ...  ...    ...       ...\n","3390  3391      2020-03-04  ...    0.0       0.0\n","3391  3392      2020-03-04  ...    0.0       0.0\n","3392  3393      2020-03-04  ...    0.0       0.0\n","3393  3394      2020-03-04  ...    0.0       0.0\n","3394  3395      2020-03-04  ...    0.0       0.0\n","\n","[3395 rows x 8 columns]"]},"metadata":{},"execution_count":115}]},{"cell_type":"code","source":["list(df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bGHzJP8JPmGt","executionInfo":{"status":"ok","timestamp":1641600420601,"user_tz":360,"elapsed":41,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"e8646a39-35d4-4bf5-f281-7d7cfc5bd5da"},"execution_count":116,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['SNo',\n"," 'ObservationDate',\n"," 'Province/State',\n"," 'Country/Region',\n"," 'Last Update',\n"," 'Confirmed',\n"," 'Deaths',\n"," 'Recovered']"]},"metadata":{},"execution_count":116}]},{"cell_type":"code","source":["df = df[[\n"," 'ObservationDate',\n"," 'Province/State',\n"," 'Country/Region',\n"," 'Confirmed',\n"," 'Deaths',\n"," 'Recovered']]\n","\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"iw2jTourRcUp","executionInfo":{"status":"ok","timestamp":1641600420601,"user_tz":360,"elapsed":39,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"81545f20-527b-4ff5-95bd-38df88ac7642"},"execution_count":117,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-3b22b42a-ed99-433a-8975-3499d8c8812c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ObservationDate</th>\n","      <th>Province/State</th>\n","      <th>Country/Region</th>\n","      <th>Confirmed</th>\n","      <th>Deaths</th>\n","      <th>Recovered</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2020-01-22</td>\n","      <td>Anhui</td>\n","      <td>Mainland China</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2020-01-22</td>\n","      <td>Beijing</td>\n","      <td>Mainland China</td>\n","      <td>14.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2020-01-22</td>\n","      <td>Chongqing</td>\n","      <td>Mainland China</td>\n","      <td>6.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2020-01-22</td>\n","      <td>Fujian</td>\n","      <td>Mainland China</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2020-01-22</td>\n","      <td>Gansu</td>\n","      <td>Mainland China</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3390</th>\n","      <td>2020-03-04</td>\n","      <td>NaN</td>\n","      <td>Ukraine</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3391</th>\n","      <td>2020-03-04</td>\n","      <td>From Diamond Princess</td>\n","      <td>Australia</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3392</th>\n","      <td>2020-03-04</td>\n","      <td>Lackland, TX (From Diamond Princess)</td>\n","      <td>US</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3393</th>\n","      <td>2020-03-04</td>\n","      <td>Omaha, NE (From Diamond Princess)</td>\n","      <td>US</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3394</th>\n","      <td>2020-03-04</td>\n","      <td>Travis, CA (From Diamond Princess)</td>\n","      <td>US</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3395 rows Ã— 6 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3b22b42a-ed99-433a-8975-3499d8c8812c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3b22b42a-ed99-433a-8975-3499d8c8812c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3b22b42a-ed99-433a-8975-3499d8c8812c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["     ObservationDate                        Province/State  ... Deaths  Recovered\n","0         2020-01-22                                 Anhui  ...    0.0        0.0\n","1         2020-01-22                               Beijing  ...    0.0        0.0\n","2         2020-01-22                             Chongqing  ...    0.0        0.0\n","3         2020-01-22                                Fujian  ...    0.0        0.0\n","4         2020-01-22                                 Gansu  ...    0.0        0.0\n","...              ...                                   ...  ...    ...        ...\n","3390      2020-03-04                                   NaN  ...    0.0        0.0\n","3391      2020-03-04                 From Diamond Princess  ...    0.0        0.0\n","3392      2020-03-04  Lackland, TX (From Diamond Princess)  ...    0.0        0.0\n","3393      2020-03-04     Omaha, NE (From Diamond Princess)  ...    0.0        0.0\n","3394      2020-03-04    Travis, CA (From Diamond Princess)  ...    0.0        0.0\n","\n","[3395 rows x 6 columns]"]},"metadata":{},"execution_count":117}]},{"cell_type":"code","source":["df_time = df.groupby('ObservationDate').sum()\n","df_time"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"yARHTUNpSECR","executionInfo":{"status":"ok","timestamp":1641600420603,"user_tz":360,"elapsed":40,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"6e112b65-73f6-4537-9de7-6c58a9b62eb3"},"execution_count":118,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-cfbc7880-4e35-4338-8cb4-8f8205c3a332\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Confirmed</th>\n","      <th>Deaths</th>\n","      <th>Recovered</th>\n","    </tr>\n","    <tr>\n","      <th>ObservationDate</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-01-22</th>\n","      <td>555.0</td>\n","      <td>17.0</td>\n","      <td>28.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-23</th>\n","      <td>653.0</td>\n","      <td>18.0</td>\n","      <td>30.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-24</th>\n","      <td>941.0</td>\n","      <td>26.0</td>\n","      <td>36.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-25</th>\n","      <td>1438.0</td>\n","      <td>42.0</td>\n","      <td>39.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-26</th>\n","      <td>2118.0</td>\n","      <td>56.0</td>\n","      <td>52.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-27</th>\n","      <td>2927.0</td>\n","      <td>82.0</td>\n","      <td>61.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-28</th>\n","      <td>5578.0</td>\n","      <td>131.0</td>\n","      <td>107.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-29</th>\n","      <td>6165.0</td>\n","      <td>133.0</td>\n","      <td>126.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-30</th>\n","      <td>8235.0</td>\n","      <td>171.0</td>\n","      <td>143.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-31</th>\n","      <td>9925.0</td>\n","      <td>213.0</td>\n","      <td>222.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-01</th>\n","      <td>12038.0</td>\n","      <td>259.0</td>\n","      <td>284.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-02</th>\n","      <td>16787.0</td>\n","      <td>362.0</td>\n","      <td>472.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-03</th>\n","      <td>19881.0</td>\n","      <td>426.0</td>\n","      <td>623.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-04</th>\n","      <td>23892.0</td>\n","      <td>492.0</td>\n","      <td>852.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-05</th>\n","      <td>27636.0</td>\n","      <td>564.0</td>\n","      <td>1124.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-06</th>\n","      <td>30818.0</td>\n","      <td>634.0</td>\n","      <td>1487.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-07</th>\n","      <td>34392.0</td>\n","      <td>719.0</td>\n","      <td>2011.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-08</th>\n","      <td>37121.0</td>\n","      <td>806.0</td>\n","      <td>2616.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-09</th>\n","      <td>40151.0</td>\n","      <td>906.0</td>\n","      <td>3244.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-10</th>\n","      <td>42763.0</td>\n","      <td>1013.0</td>\n","      <td>3946.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-11</th>\n","      <td>44803.0</td>\n","      <td>1113.0</td>\n","      <td>4683.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-12</th>\n","      <td>45222.0</td>\n","      <td>1118.0</td>\n","      <td>5150.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-13</th>\n","      <td>60370.0</td>\n","      <td>1371.0</td>\n","      <td>6295.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-14</th>\n","      <td>66887.0</td>\n","      <td>1523.0</td>\n","      <td>8058.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-15</th>\n","      <td>69032.0</td>\n","      <td>1666.0</td>\n","      <td>9395.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-16</th>\n","      <td>71226.0</td>\n","      <td>1770.0</td>\n","      <td>10865.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-17</th>\n","      <td>73260.0</td>\n","      <td>1868.0</td>\n","      <td>12583.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-18</th>\n","      <td>75138.0</td>\n","      <td>2007.0</td>\n","      <td>14352.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-19</th>\n","      <td>75641.0</td>\n","      <td>2122.0</td>\n","      <td>16121.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-20</th>\n","      <td>76199.0</td>\n","      <td>2247.0</td>\n","      <td>18177.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-21</th>\n","      <td>76843.0</td>\n","      <td>2251.0</td>\n","      <td>18890.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-22</th>\n","      <td>78599.0</td>\n","      <td>2458.0</td>\n","      <td>22886.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-23</th>\n","      <td>78985.0</td>\n","      <td>2469.0</td>\n","      <td>23394.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-24</th>\n","      <td>79570.0</td>\n","      <td>2629.0</td>\n","      <td>25227.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-25</th>\n","      <td>80415.0</td>\n","      <td>2708.0</td>\n","      <td>27905.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-26</th>\n","      <td>81397.0</td>\n","      <td>2770.0</td>\n","      <td>30384.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-27</th>\n","      <td>82756.0</td>\n","      <td>2814.0</td>\n","      <td>33277.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-28</th>\n","      <td>84124.0</td>\n","      <td>2872.0</td>\n","      <td>36711.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-29</th>\n","      <td>86013.0</td>\n","      <td>2941.0</td>\n","      <td>39782.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-01</th>\n","      <td>88371.0</td>\n","      <td>2996.0</td>\n","      <td>42716.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-02</th>\n","      <td>90309.0</td>\n","      <td>3085.0</td>\n","      <td>45602.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-03</th>\n","      <td>92844.0</td>\n","      <td>3160.0</td>\n","      <td>48229.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-04</th>\n","      <td>95124.0</td>\n","      <td>3254.0</td>\n","      <td>51171.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cfbc7880-4e35-4338-8cb4-8f8205c3a332')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-cfbc7880-4e35-4338-8cb4-8f8205c3a332 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-cfbc7880-4e35-4338-8cb4-8f8205c3a332');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["                 Confirmed  Deaths  Recovered\n","ObservationDate                              \n","2020-01-22           555.0    17.0       28.0\n","2020-01-23           653.0    18.0       30.0\n","2020-01-24           941.0    26.0       36.0\n","2020-01-25          1438.0    42.0       39.0\n","2020-01-26          2118.0    56.0       52.0\n","2020-01-27          2927.0    82.0       61.0\n","2020-01-28          5578.0   131.0      107.0\n","2020-01-29          6165.0   133.0      126.0\n","2020-01-30          8235.0   171.0      143.0\n","2020-01-31          9925.0   213.0      222.0\n","2020-02-01         12038.0   259.0      284.0\n","2020-02-02         16787.0   362.0      472.0\n","2020-02-03         19881.0   426.0      623.0\n","2020-02-04         23892.0   492.0      852.0\n","2020-02-05         27636.0   564.0     1124.0\n","2020-02-06         30818.0   634.0     1487.0\n","2020-02-07         34392.0   719.0     2011.0\n","2020-02-08         37121.0   806.0     2616.0\n","2020-02-09         40151.0   906.0     3244.0\n","2020-02-10         42763.0  1013.0     3946.0\n","2020-02-11         44803.0  1113.0     4683.0\n","2020-02-12         45222.0  1118.0     5150.0\n","2020-02-13         60370.0  1371.0     6295.0\n","2020-02-14         66887.0  1523.0     8058.0\n","2020-02-15         69032.0  1666.0     9395.0\n","2020-02-16         71226.0  1770.0    10865.0\n","2020-02-17         73260.0  1868.0    12583.0\n","2020-02-18         75138.0  2007.0    14352.0\n","2020-02-19         75641.0  2122.0    16121.0\n","2020-02-20         76199.0  2247.0    18177.0\n","2020-02-21         76843.0  2251.0    18890.0\n","2020-02-22         78599.0  2458.0    22886.0\n","2020-02-23         78985.0  2469.0    23394.0\n","2020-02-24         79570.0  2629.0    25227.0\n","2020-02-25         80415.0  2708.0    27905.0\n","2020-02-26         81397.0  2770.0    30384.0\n","2020-02-27         82756.0  2814.0    33277.0\n","2020-02-28         84124.0  2872.0    36711.0\n","2020-02-29         86013.0  2941.0    39782.0\n","2020-03-01         88371.0  2996.0    42716.0\n","2020-03-02         90309.0  3085.0    45602.0\n","2020-03-03         92844.0  3160.0    48229.0\n","2020-03-04         95124.0  3254.0    51171.0"]},"metadata":{},"execution_count":118}]},{"cell_type":"code","source":["df1 = df_time['Confirmed'].iloc[10:15]\n","df1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"johULkIrSfD3","executionInfo":{"status":"ok","timestamp":1641600420605,"user_tz":360,"elapsed":41,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"0c7b20ce-aa48-4f7f-bd0b-d2dec4b1727f"},"execution_count":119,"outputs":[{"output_type":"execute_result","data":{"text/plain":["ObservationDate\n","2020-02-01    12038.0\n","2020-02-02    16787.0\n","2020-02-03    19881.0\n","2020-02-04    23892.0\n","2020-02-05    27636.0\n","Name: Confirmed, dtype: float64"]},"metadata":{},"execution_count":119}]},{"cell_type":"code","source":["df2 = df_time['Deaths'].iloc[12:17]\n","df2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JA2lfkDaTG-m","executionInfo":{"status":"ok","timestamp":1641600420609,"user_tz":360,"elapsed":42,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"bd045279-b960-4759-e2b9-5e6616f9d4e2"},"execution_count":120,"outputs":[{"output_type":"execute_result","data":{"text/plain":["ObservationDate\n","2020-02-03    426.0\n","2020-02-04    492.0\n","2020-02-05    564.0\n","2020-02-06    634.0\n","2020-02-07    719.0\n","Name: Deaths, dtype: float64"]},"metadata":{},"execution_count":120}]},{"cell_type":"code","source":["df1 - df2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"m9b0jBi0TY6N","executionInfo":{"status":"ok","timestamp":1641600420610,"user_tz":360,"elapsed":40,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"8fcdf489-a30a-4ed7-8e88-22c58c4699fc"},"execution_count":121,"outputs":[{"output_type":"execute_result","data":{"text/plain":["ObservationDate\n","2020-02-01        NaN\n","2020-02-02        NaN\n","2020-02-03    19455.0\n","2020-02-04    23400.0\n","2020-02-05    27072.0\n","2020-02-06        NaN\n","2020-02-07        NaN\n","dtype: float64"]},"metadata":{},"execution_count":121}]},{"cell_type":"code","source":["#Ver el aumento de casos dia con dia\n","df_diff = df_time.diff()\n","df_diff"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"CQ6ViXRJTpTM","executionInfo":{"status":"ok","timestamp":1641600420611,"user_tz":360,"elapsed":39,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"edd6c20a-0e88-4013-fd6a-26a4a9963a28"},"execution_count":122,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-29d3cfc9-0548-4245-9d8b-547cbf624ab9\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Confirmed</th>\n","      <th>Deaths</th>\n","      <th>Recovered</th>\n","    </tr>\n","    <tr>\n","      <th>ObservationDate</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-01-22</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-23</th>\n","      <td>98.0</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-24</th>\n","      <td>288.0</td>\n","      <td>8.0</td>\n","      <td>6.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-25</th>\n","      <td>497.0</td>\n","      <td>16.0</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-26</th>\n","      <td>680.0</td>\n","      <td>14.0</td>\n","      <td>13.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-27</th>\n","      <td>809.0</td>\n","      <td>26.0</td>\n","      <td>9.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-28</th>\n","      <td>2651.0</td>\n","      <td>49.0</td>\n","      <td>46.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-29</th>\n","      <td>587.0</td>\n","      <td>2.0</td>\n","      <td>19.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-30</th>\n","      <td>2070.0</td>\n","      <td>38.0</td>\n","      <td>17.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-31</th>\n","      <td>1690.0</td>\n","      <td>42.0</td>\n","      <td>79.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-01</th>\n","      <td>2113.0</td>\n","      <td>46.0</td>\n","      <td>62.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-02</th>\n","      <td>4749.0</td>\n","      <td>103.0</td>\n","      <td>188.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-03</th>\n","      <td>3094.0</td>\n","      <td>64.0</td>\n","      <td>151.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-04</th>\n","      <td>4011.0</td>\n","      <td>66.0</td>\n","      <td>229.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-05</th>\n","      <td>3744.0</td>\n","      <td>72.0</td>\n","      <td>272.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-06</th>\n","      <td>3182.0</td>\n","      <td>70.0</td>\n","      <td>363.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-07</th>\n","      <td>3574.0</td>\n","      <td>85.0</td>\n","      <td>524.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-08</th>\n","      <td>2729.0</td>\n","      <td>87.0</td>\n","      <td>605.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-09</th>\n","      <td>3030.0</td>\n","      <td>100.0</td>\n","      <td>628.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-10</th>\n","      <td>2612.0</td>\n","      <td>107.0</td>\n","      <td>702.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-11</th>\n","      <td>2040.0</td>\n","      <td>100.0</td>\n","      <td>737.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-12</th>\n","      <td>419.0</td>\n","      <td>5.0</td>\n","      <td>467.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-13</th>\n","      <td>15148.0</td>\n","      <td>253.0</td>\n","      <td>1145.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-14</th>\n","      <td>6517.0</td>\n","      <td>152.0</td>\n","      <td>1763.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-15</th>\n","      <td>2145.0</td>\n","      <td>143.0</td>\n","      <td>1337.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-16</th>\n","      <td>2194.0</td>\n","      <td>104.0</td>\n","      <td>1470.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-17</th>\n","      <td>2034.0</td>\n","      <td>98.0</td>\n","      <td>1718.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-18</th>\n","      <td>1878.0</td>\n","      <td>139.0</td>\n","      <td>1769.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-19</th>\n","      <td>503.0</td>\n","      <td>115.0</td>\n","      <td>1769.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-20</th>\n","      <td>558.0</td>\n","      <td>125.0</td>\n","      <td>2056.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-21</th>\n","      <td>644.0</td>\n","      <td>4.0</td>\n","      <td>713.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-22</th>\n","      <td>1756.0</td>\n","      <td>207.0</td>\n","      <td>3996.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-23</th>\n","      <td>386.0</td>\n","      <td>11.0</td>\n","      <td>508.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-24</th>\n","      <td>585.0</td>\n","      <td>160.0</td>\n","      <td>1833.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-25</th>\n","      <td>845.0</td>\n","      <td>79.0</td>\n","      <td>2678.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-26</th>\n","      <td>982.0</td>\n","      <td>62.0</td>\n","      <td>2479.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-27</th>\n","      <td>1359.0</td>\n","      <td>44.0</td>\n","      <td>2893.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-28</th>\n","      <td>1368.0</td>\n","      <td>58.0</td>\n","      <td>3434.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-29</th>\n","      <td>1889.0</td>\n","      <td>69.0</td>\n","      <td>3071.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-01</th>\n","      <td>2358.0</td>\n","      <td>55.0</td>\n","      <td>2934.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-02</th>\n","      <td>1938.0</td>\n","      <td>89.0</td>\n","      <td>2886.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-03</th>\n","      <td>2535.0</td>\n","      <td>75.0</td>\n","      <td>2627.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-04</th>\n","      <td>2280.0</td>\n","      <td>94.0</td>\n","      <td>2942.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-29d3cfc9-0548-4245-9d8b-547cbf624ab9')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-29d3cfc9-0548-4245-9d8b-547cbf624ab9 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-29d3cfc9-0548-4245-9d8b-547cbf624ab9');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["                 Confirmed  Deaths  Recovered\n","ObservationDate                              \n","2020-01-22             NaN     NaN        NaN\n","2020-01-23            98.0     1.0        2.0\n","2020-01-24           288.0     8.0        6.0\n","2020-01-25           497.0    16.0        3.0\n","2020-01-26           680.0    14.0       13.0\n","2020-01-27           809.0    26.0        9.0\n","2020-01-28          2651.0    49.0       46.0\n","2020-01-29           587.0     2.0       19.0\n","2020-01-30          2070.0    38.0       17.0\n","2020-01-31          1690.0    42.0       79.0\n","2020-02-01          2113.0    46.0       62.0\n","2020-02-02          4749.0   103.0      188.0\n","2020-02-03          3094.0    64.0      151.0\n","2020-02-04          4011.0    66.0      229.0\n","2020-02-05          3744.0    72.0      272.0\n","2020-02-06          3182.0    70.0      363.0\n","2020-02-07          3574.0    85.0      524.0\n","2020-02-08          2729.0    87.0      605.0\n","2020-02-09          3030.0   100.0      628.0\n","2020-02-10          2612.0   107.0      702.0\n","2020-02-11          2040.0   100.0      737.0\n","2020-02-12           419.0     5.0      467.0\n","2020-02-13         15148.0   253.0     1145.0\n","2020-02-14          6517.0   152.0     1763.0\n","2020-02-15          2145.0   143.0     1337.0\n","2020-02-16          2194.0   104.0     1470.0\n","2020-02-17          2034.0    98.0     1718.0\n","2020-02-18          1878.0   139.0     1769.0\n","2020-02-19           503.0   115.0     1769.0\n","2020-02-20           558.0   125.0     2056.0\n","2020-02-21           644.0     4.0      713.0\n","2020-02-22          1756.0   207.0     3996.0\n","2020-02-23           386.0    11.0      508.0\n","2020-02-24           585.0   160.0     1833.0\n","2020-02-25           845.0    79.0     2678.0\n","2020-02-26           982.0    62.0     2479.0\n","2020-02-27          1359.0    44.0     2893.0\n","2020-02-28          1368.0    58.0     3434.0\n","2020-02-29          1889.0    69.0     3071.0\n","2020-03-01          2358.0    55.0     2934.0\n","2020-03-02          1938.0    89.0     2886.0\n","2020-03-03          2535.0    75.0     2627.0\n","2020-03-04          2280.0    94.0     2942.0"]},"metadata":{},"execution_count":122}]},{"cell_type":"code","source":["#Ver el aumento de casos dia con dia promedio\n","df_time.diff().mean()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"k5cXYiQVUBEE","executionInfo":{"status":"ok","timestamp":1641600421353,"user_tz":360,"elapsed":780,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"9d33a94a-81ae-4b18-ab52-99ba09abd048"},"execution_count":123,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Confirmed    2251.642857\n","Deaths         77.071429\n","Recovered    1217.690476\n","dtype: float64"]},"metadata":{},"execution_count":123}]},{"cell_type":"code","source":["#Ver el aumento de casos dia con dia mediana\n","df_time.diff().median()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FatiGFMFUd0b","executionInfo":{"status":"ok","timestamp":1641600421354,"user_tz":360,"elapsed":78,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"8d317415-a23e-4a93-eb16-cfe9265d6717"},"execution_count":124,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Confirmed    1986.0\n","Deaths         71.0\n","Recovered     707.5\n","dtype: float64"]},"metadata":{},"execution_count":124}]},{"cell_type":"code","source":["#eliminar los valores nulos de la primera fila\n","df_time.head(1).to_dict()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VByIYjysUkfb","executionInfo":{"status":"ok","timestamp":1641600421356,"user_tz":360,"elapsed":76,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"24bde866-b348-4afc-92d8-c45eb96febf7"},"execution_count":125,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'Confirmed': {Timestamp('2020-01-22 00:00:00'): 555.0},\n"," 'Deaths': {Timestamp('2020-01-22 00:00:00'): 17.0},\n"," 'Recovered': {Timestamp('2020-01-22 00:00:00'): 28.0}}"]},"metadata":{},"execution_count":125}]},{"cell_type":"code","source":["df_diff = df_diff.fillna({\n","    'Confirmed': 555.0,\n","    'Deaths': 17.0,\n","    'Recovered': 18.0,\n","  })\n","df_diff.head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"glaZTANPV74p","executionInfo":{"status":"ok","timestamp":1641600421358,"user_tz":360,"elapsed":75,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"e536c285-f43b-47b1-9c76-df42e84078e5"},"execution_count":126,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-20ed388f-3c30-4487-bf52-dc30310bc537\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Confirmed</th>\n","      <th>Deaths</th>\n","      <th>Recovered</th>\n","    </tr>\n","    <tr>\n","      <th>ObservationDate</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-01-22</th>\n","      <td>555.0</td>\n","      <td>17.0</td>\n","      <td>18.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-23</th>\n","      <td>98.0</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-24</th>\n","      <td>288.0</td>\n","      <td>8.0</td>\n","      <td>6.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-25</th>\n","      <td>497.0</td>\n","      <td>16.0</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-26</th>\n","      <td>680.0</td>\n","      <td>14.0</td>\n","      <td>13.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-20ed388f-3c30-4487-bf52-dc30310bc537')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-20ed388f-3c30-4487-bf52-dc30310bc537 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-20ed388f-3c30-4487-bf52-dc30310bc537');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["                 Confirmed  Deaths  Recovered\n","ObservationDate                              \n","2020-01-22           555.0    17.0       18.0\n","2020-01-23            98.0     1.0        2.0\n","2020-01-24           288.0     8.0        6.0\n","2020-01-25           497.0    16.0        3.0\n","2020-01-26           680.0    14.0       13.0"]},"metadata":{},"execution_count":126}]},{"cell_type":"code","source":["df_diff.cumsum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"QwwADuFCWHyf","executionInfo":{"status":"ok","timestamp":1641600421360,"user_tz":360,"elapsed":76,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"3d89e5a7-8edc-4326-a46a-cb3bad39b2d5"},"execution_count":127,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-fbf8ad39-dbc7-485b-98ec-4250c8c4a381\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Confirmed</th>\n","      <th>Deaths</th>\n","      <th>Recovered</th>\n","    </tr>\n","    <tr>\n","      <th>ObservationDate</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-01-22</th>\n","      <td>555.0</td>\n","      <td>17.0</td>\n","      <td>18.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-23</th>\n","      <td>653.0</td>\n","      <td>18.0</td>\n","      <td>20.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-24</th>\n","      <td>941.0</td>\n","      <td>26.0</td>\n","      <td>26.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-25</th>\n","      <td>1438.0</td>\n","      <td>42.0</td>\n","      <td>29.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-26</th>\n","      <td>2118.0</td>\n","      <td>56.0</td>\n","      <td>42.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-27</th>\n","      <td>2927.0</td>\n","      <td>82.0</td>\n","      <td>51.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-28</th>\n","      <td>5578.0</td>\n","      <td>131.0</td>\n","      <td>97.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-29</th>\n","      <td>6165.0</td>\n","      <td>133.0</td>\n","      <td>116.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-30</th>\n","      <td>8235.0</td>\n","      <td>171.0</td>\n","      <td>133.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-31</th>\n","      <td>9925.0</td>\n","      <td>213.0</td>\n","      <td>212.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-01</th>\n","      <td>12038.0</td>\n","      <td>259.0</td>\n","      <td>274.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-02</th>\n","      <td>16787.0</td>\n","      <td>362.0</td>\n","      <td>462.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-03</th>\n","      <td>19881.0</td>\n","      <td>426.0</td>\n","      <td>613.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-04</th>\n","      <td>23892.0</td>\n","      <td>492.0</td>\n","      <td>842.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-05</th>\n","      <td>27636.0</td>\n","      <td>564.0</td>\n","      <td>1114.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-06</th>\n","      <td>30818.0</td>\n","      <td>634.0</td>\n","      <td>1477.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-07</th>\n","      <td>34392.0</td>\n","      <td>719.0</td>\n","      <td>2001.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-08</th>\n","      <td>37121.0</td>\n","      <td>806.0</td>\n","      <td>2606.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-09</th>\n","      <td>40151.0</td>\n","      <td>906.0</td>\n","      <td>3234.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-10</th>\n","      <td>42763.0</td>\n","      <td>1013.0</td>\n","      <td>3936.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-11</th>\n","      <td>44803.0</td>\n","      <td>1113.0</td>\n","      <td>4673.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-12</th>\n","      <td>45222.0</td>\n","      <td>1118.0</td>\n","      <td>5140.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-13</th>\n","      <td>60370.0</td>\n","      <td>1371.0</td>\n","      <td>6285.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-14</th>\n","      <td>66887.0</td>\n","      <td>1523.0</td>\n","      <td>8048.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-15</th>\n","      <td>69032.0</td>\n","      <td>1666.0</td>\n","      <td>9385.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-16</th>\n","      <td>71226.0</td>\n","      <td>1770.0</td>\n","      <td>10855.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-17</th>\n","      <td>73260.0</td>\n","      <td>1868.0</td>\n","      <td>12573.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-18</th>\n","      <td>75138.0</td>\n","      <td>2007.0</td>\n","      <td>14342.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-19</th>\n","      <td>75641.0</td>\n","      <td>2122.0</td>\n","      <td>16111.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-20</th>\n","      <td>76199.0</td>\n","      <td>2247.0</td>\n","      <td>18167.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-21</th>\n","      <td>76843.0</td>\n","      <td>2251.0</td>\n","      <td>18880.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-22</th>\n","      <td>78599.0</td>\n","      <td>2458.0</td>\n","      <td>22876.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-23</th>\n","      <td>78985.0</td>\n","      <td>2469.0</td>\n","      <td>23384.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-24</th>\n","      <td>79570.0</td>\n","      <td>2629.0</td>\n","      <td>25217.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-25</th>\n","      <td>80415.0</td>\n","      <td>2708.0</td>\n","      <td>27895.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-26</th>\n","      <td>81397.0</td>\n","      <td>2770.0</td>\n","      <td>30374.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-27</th>\n","      <td>82756.0</td>\n","      <td>2814.0</td>\n","      <td>33267.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-28</th>\n","      <td>84124.0</td>\n","      <td>2872.0</td>\n","      <td>36701.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-29</th>\n","      <td>86013.0</td>\n","      <td>2941.0</td>\n","      <td>39772.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-01</th>\n","      <td>88371.0</td>\n","      <td>2996.0</td>\n","      <td>42706.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-02</th>\n","      <td>90309.0</td>\n","      <td>3085.0</td>\n","      <td>45592.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-03</th>\n","      <td>92844.0</td>\n","      <td>3160.0</td>\n","      <td>48219.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-04</th>\n","      <td>95124.0</td>\n","      <td>3254.0</td>\n","      <td>51161.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fbf8ad39-dbc7-485b-98ec-4250c8c4a381')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-fbf8ad39-dbc7-485b-98ec-4250c8c4a381 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-fbf8ad39-dbc7-485b-98ec-4250c8c4a381');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["                 Confirmed  Deaths  Recovered\n","ObservationDate                              \n","2020-01-22           555.0    17.0       18.0\n","2020-01-23           653.0    18.0       20.0\n","2020-01-24           941.0    26.0       26.0\n","2020-01-25          1438.0    42.0       29.0\n","2020-01-26          2118.0    56.0       42.0\n","2020-01-27          2927.0    82.0       51.0\n","2020-01-28          5578.0   131.0       97.0\n","2020-01-29          6165.0   133.0      116.0\n","2020-01-30          8235.0   171.0      133.0\n","2020-01-31          9925.0   213.0      212.0\n","2020-02-01         12038.0   259.0      274.0\n","2020-02-02         16787.0   362.0      462.0\n","2020-02-03         19881.0   426.0      613.0\n","2020-02-04         23892.0   492.0      842.0\n","2020-02-05         27636.0   564.0     1114.0\n","2020-02-06         30818.0   634.0     1477.0\n","2020-02-07         34392.0   719.0     2001.0\n","2020-02-08         37121.0   806.0     2606.0\n","2020-02-09         40151.0   906.0     3234.0\n","2020-02-10         42763.0  1013.0     3936.0\n","2020-02-11         44803.0  1113.0     4673.0\n","2020-02-12         45222.0  1118.0     5140.0\n","2020-02-13         60370.0  1371.0     6285.0\n","2020-02-14         66887.0  1523.0     8048.0\n","2020-02-15         69032.0  1666.0     9385.0\n","2020-02-16         71226.0  1770.0    10855.0\n","2020-02-17         73260.0  1868.0    12573.0\n","2020-02-18         75138.0  2007.0    14342.0\n","2020-02-19         75641.0  2122.0    16111.0\n","2020-02-20         76199.0  2247.0    18167.0\n","2020-02-21         76843.0  2251.0    18880.0\n","2020-02-22         78599.0  2458.0    22876.0\n","2020-02-23         78985.0  2469.0    23384.0\n","2020-02-24         79570.0  2629.0    25217.0\n","2020-02-25         80415.0  2708.0    27895.0\n","2020-02-26         81397.0  2770.0    30374.0\n","2020-02-27         82756.0  2814.0    33267.0\n","2020-02-28         84124.0  2872.0    36701.0\n","2020-02-29         86013.0  2941.0    39772.0\n","2020-03-01         88371.0  2996.0    42706.0\n","2020-03-02         90309.0  3085.0    45592.0\n","2020-03-03         92844.0  3160.0    48219.0\n","2020-03-04         95124.0  3254.0    51161.0"]},"metadata":{},"execution_count":127}]},{"cell_type":"code","source":["#Calculos estadisticos a tiempos definidos\n","df_diff.resample('7D').sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"-ab9fvBAXQU-","executionInfo":{"status":"ok","timestamp":1641600421362,"user_tz":360,"elapsed":77,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"b1a0df7d-4290-49dc-d693-1bb2302c4c0c"},"execution_count":128,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-52617277-2fbf-441b-8475-e50e4dedbca2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Confirmed</th>\n","      <th>Deaths</th>\n","      <th>Recovered</th>\n","    </tr>\n","    <tr>\n","      <th>ObservationDate</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-01-22</th>\n","      <td>5578.0</td>\n","      <td>131.0</td>\n","      <td>97.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-29</th>\n","      <td>18314.0</td>\n","      <td>361.0</td>\n","      <td>745.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-05</th>\n","      <td>20911.0</td>\n","      <td>621.0</td>\n","      <td>3831.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-12</th>\n","      <td>30335.0</td>\n","      <td>894.0</td>\n","      <td>9669.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-19</th>\n","      <td>5277.0</td>\n","      <td>701.0</td>\n","      <td>13553.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-26</th>\n","      <td>12429.0</td>\n","      <td>452.0</td>\n","      <td>20324.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-04</th>\n","      <td>2280.0</td>\n","      <td>94.0</td>\n","      <td>2942.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-52617277-2fbf-441b-8475-e50e4dedbca2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-52617277-2fbf-441b-8475-e50e4dedbca2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-52617277-2fbf-441b-8475-e50e4dedbca2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["                 Confirmed  Deaths  Recovered\n","ObservationDate                              \n","2020-01-22          5578.0   131.0       97.0\n","2020-01-29         18314.0   361.0      745.0\n","2020-02-05         20911.0   621.0     3831.0\n","2020-02-12         30335.0   894.0     9669.0\n","2020-02-19          5277.0   701.0    13553.0\n","2020-02-26         12429.0   452.0    20324.0\n","2020-03-04          2280.0    94.0     2942.0"]},"metadata":{},"execution_count":128}]},{"cell_type":"code","source":["#Cada domingo\n","df_diff.resample('W-Sun').sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"0JoKijgtXhSs","executionInfo":{"status":"ok","timestamp":1641600421364,"user_tz":360,"elapsed":78,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"411c8226-3398-4474-fe1d-b3a851b91992"},"execution_count":129,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-46f60ba6-9468-46df-9693-9a4b716ea90d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Confirmed</th>\n","      <th>Deaths</th>\n","      <th>Recovered</th>\n","    </tr>\n","    <tr>\n","      <th>ObservationDate</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-01-26</th>\n","      <td>2118.0</td>\n","      <td>56.0</td>\n","      <td>42.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-02</th>\n","      <td>14669.0</td>\n","      <td>306.0</td>\n","      <td>420.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-09</th>\n","      <td>23364.0</td>\n","      <td>544.0</td>\n","      <td>2772.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-16</th>\n","      <td>31075.0</td>\n","      <td>864.0</td>\n","      <td>7621.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-23</th>\n","      <td>7759.0</td>\n","      <td>699.0</td>\n","      <td>12529.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-01</th>\n","      <td>9386.0</td>\n","      <td>527.0</td>\n","      <td>19322.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-08</th>\n","      <td>6753.0</td>\n","      <td>258.0</td>\n","      <td>8455.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-46f60ba6-9468-46df-9693-9a4b716ea90d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-46f60ba6-9468-46df-9693-9a4b716ea90d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-46f60ba6-9468-46df-9693-9a4b716ea90d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["                 Confirmed  Deaths  Recovered\n","ObservationDate                              \n","2020-01-26          2118.0    56.0       42.0\n","2020-02-02         14669.0   306.0      420.0\n","2020-02-09         23364.0   544.0     2772.0\n","2020-02-16         31075.0   864.0     7621.0\n","2020-02-23          7759.0   699.0    12529.0\n","2020-03-01          9386.0   527.0    19322.0\n","2020-03-08          6753.0   258.0     8455.0"]},"metadata":{},"execution_count":129}]},{"cell_type":"code","source":["#Mensual\n","df_diff.resample('M').sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"E34qiAH9Xxg8","executionInfo":{"status":"ok","timestamp":1641600421365,"user_tz":360,"elapsed":78,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"5dcaae9a-3fc5-445a-f67c-88bc468283e4"},"execution_count":130,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-16869f3d-b3db-4150-b1e5-26e7701421be\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Confirmed</th>\n","      <th>Deaths</th>\n","      <th>Recovered</th>\n","    </tr>\n","    <tr>\n","      <th>ObservationDate</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-01-31</th>\n","      <td>9925.0</td>\n","      <td>213.0</td>\n","      <td>212.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-29</th>\n","      <td>76088.0</td>\n","      <td>2728.0</td>\n","      <td>39560.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-31</th>\n","      <td>9111.0</td>\n","      <td>313.0</td>\n","      <td>11389.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-16869f3d-b3db-4150-b1e5-26e7701421be')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-16869f3d-b3db-4150-b1e5-26e7701421be button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-16869f3d-b3db-4150-b1e5-26e7701421be');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["                 Confirmed  Deaths  Recovered\n","ObservationDate                              \n","2020-01-31          9925.0   213.0      212.0\n","2020-02-29         76088.0  2728.0    39560.0\n","2020-03-31          9111.0   313.0    11389.0"]},"metadata":{},"execution_count":130}]},{"cell_type":"code","source":["#Por quÃ© hay mas casos en Febroro?... Cuantos registros hay por mes\n","df_diff.resample('M').count()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"9qJGdCPEX_gU","executionInfo":{"status":"ok","timestamp":1641600421367,"user_tz":360,"elapsed":79,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"562615ff-6d14-4b04-9a3e-389cb4e782f1"},"execution_count":131,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-68ef6b28-2b02-4273-9ae3-310e3345ebdc\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Confirmed</th>\n","      <th>Deaths</th>\n","      <th>Recovered</th>\n","    </tr>\n","    <tr>\n","      <th>ObservationDate</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-01-31</th>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-29</th>\n","      <td>29</td>\n","      <td>29</td>\n","      <td>29</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-31</th>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-68ef6b28-2b02-4273-9ae3-310e3345ebdc')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-68ef6b28-2b02-4273-9ae3-310e3345ebdc button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-68ef6b28-2b02-4273-9ae3-310e3345ebdc');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["                 Confirmed  Deaths  Recovered\n","ObservationDate                              \n","2020-01-31              10      10         10\n","2020-02-29              29      29         29\n","2020-03-31               4       4          4"]},"metadata":{},"execution_count":131}]},{"cell_type":"code","source":["df_diff.resample('12h').sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":454},"id":"xvIOu130YWaK","executionInfo":{"status":"ok","timestamp":1641600421368,"user_tz":360,"elapsed":80,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"72ec8f79-f1ea-41bb-b7e1-57a376ae1422"},"execution_count":132,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-876fcdae-ba09-4327-a582-e498f509bbec\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Confirmed</th>\n","      <th>Deaths</th>\n","      <th>Recovered</th>\n","    </tr>\n","    <tr>\n","      <th>ObservationDate</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-01-22 00:00:00</th>\n","      <td>555.0</td>\n","      <td>17.0</td>\n","      <td>18.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-22 12:00:00</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-23 00:00:00</th>\n","      <td>98.0</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-23 12:00:00</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-24 00:00:00</th>\n","      <td>288.0</td>\n","      <td>8.0</td>\n","      <td>6.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-02 00:00:00</th>\n","      <td>1938.0</td>\n","      <td>89.0</td>\n","      <td>2886.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-02 12:00:00</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-03 00:00:00</th>\n","      <td>2535.0</td>\n","      <td>75.0</td>\n","      <td>2627.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-03 12:00:00</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-04 00:00:00</th>\n","      <td>2280.0</td>\n","      <td>94.0</td>\n","      <td>2942.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>85 rows Ã— 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-876fcdae-ba09-4327-a582-e498f509bbec')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-876fcdae-ba09-4327-a582-e498f509bbec button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-876fcdae-ba09-4327-a582-e498f509bbec');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["                     Confirmed  Deaths  Recovered\n","ObservationDate                                  \n","2020-01-22 00:00:00      555.0    17.0       18.0\n","2020-01-22 12:00:00        0.0     0.0        0.0\n","2020-01-23 00:00:00       98.0     1.0        2.0\n","2020-01-23 12:00:00        0.0     0.0        0.0\n","2020-01-24 00:00:00      288.0     8.0        6.0\n","...                        ...     ...        ...\n","2020-03-02 00:00:00     1938.0    89.0     2886.0\n","2020-03-02 12:00:00        0.0     0.0        0.0\n","2020-03-03 00:00:00     2535.0    75.0     2627.0\n","2020-03-03 12:00:00        0.0     0.0        0.0\n","2020-03-04 00:00:00     2280.0    94.0     2942.0\n","\n","[85 rows x 3 columns]"]},"metadata":{},"execution_count":132}]},{"cell_type":"code","source":["df_diff.resample('12h').mean()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":454},"id":"cfGQO6pAcMZk","executionInfo":{"status":"ok","timestamp":1641600421370,"user_tz":360,"elapsed":81,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"3d47b120-e583-4428-a346-cf7ae961b300"},"execution_count":133,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-1c5143b2-cc75-434b-b5fd-c0714fe34871\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Confirmed</th>\n","      <th>Deaths</th>\n","      <th>Recovered</th>\n","    </tr>\n","    <tr>\n","      <th>ObservationDate</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-01-22 00:00:00</th>\n","      <td>555.0</td>\n","      <td>17.0</td>\n","      <td>18.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-22 12:00:00</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-23 00:00:00</th>\n","      <td>98.0</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-23 12:00:00</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-24 00:00:00</th>\n","      <td>288.0</td>\n","      <td>8.0</td>\n","      <td>6.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-02 00:00:00</th>\n","      <td>1938.0</td>\n","      <td>89.0</td>\n","      <td>2886.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-02 12:00:00</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-03 00:00:00</th>\n","      <td>2535.0</td>\n","      <td>75.0</td>\n","      <td>2627.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-03 12:00:00</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-04 00:00:00</th>\n","      <td>2280.0</td>\n","      <td>94.0</td>\n","      <td>2942.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>85 rows Ã— 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1c5143b2-cc75-434b-b5fd-c0714fe34871')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1c5143b2-cc75-434b-b5fd-c0714fe34871 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1c5143b2-cc75-434b-b5fd-c0714fe34871');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["                     Confirmed  Deaths  Recovered\n","ObservationDate                                  \n","2020-01-22 00:00:00      555.0    17.0       18.0\n","2020-01-22 12:00:00        NaN     NaN        NaN\n","2020-01-23 00:00:00       98.0     1.0        2.0\n","2020-01-23 12:00:00        NaN     NaN        NaN\n","2020-01-24 00:00:00      288.0     8.0        6.0\n","...                        ...     ...        ...\n","2020-03-02 00:00:00     1938.0    89.0     2886.0\n","2020-03-02 12:00:00        NaN     NaN        NaN\n","2020-03-03 00:00:00     2535.0    75.0     2627.0\n","2020-03-03 12:00:00        NaN     NaN        NaN\n","2020-03-04 00:00:00     2280.0    94.0     2942.0\n","\n","[85 rows x 3 columns]"]},"metadata":{},"execution_count":133}]},{"cell_type":"code","source":["df_diff.resample('12h').sum(min_count=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":454},"id":"X1UZq8K-cWSc","executionInfo":{"status":"ok","timestamp":1641600421371,"user_tz":360,"elapsed":79,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"a21656c8-1568-43d3-f2fe-49ba3f17e76e"},"execution_count":134,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-86414fce-7835-4d5f-86fa-1b2cfa713520\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Confirmed</th>\n","      <th>Deaths</th>\n","      <th>Recovered</th>\n","    </tr>\n","    <tr>\n","      <th>ObservationDate</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-01-22 00:00:00</th>\n","      <td>555.0</td>\n","      <td>17.0</td>\n","      <td>18.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-22 12:00:00</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-23 00:00:00</th>\n","      <td>98.0</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-23 12:00:00</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-24 00:00:00</th>\n","      <td>288.0</td>\n","      <td>8.0</td>\n","      <td>6.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-02 00:00:00</th>\n","      <td>1938.0</td>\n","      <td>89.0</td>\n","      <td>2886.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-02 12:00:00</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-03 00:00:00</th>\n","      <td>2535.0</td>\n","      <td>75.0</td>\n","      <td>2627.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-03 12:00:00</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-04 00:00:00</th>\n","      <td>2280.0</td>\n","      <td>94.0</td>\n","      <td>2942.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>85 rows Ã— 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-86414fce-7835-4d5f-86fa-1b2cfa713520')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-86414fce-7835-4d5f-86fa-1b2cfa713520 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-86414fce-7835-4d5f-86fa-1b2cfa713520');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["                     Confirmed  Deaths  Recovered\n","ObservationDate                                  \n","2020-01-22 00:00:00      555.0    17.0       18.0\n","2020-01-22 12:00:00        NaN     NaN        NaN\n","2020-01-23 00:00:00       98.0     1.0        2.0\n","2020-01-23 12:00:00        NaN     NaN        NaN\n","2020-01-24 00:00:00      288.0     8.0        6.0\n","...                        ...     ...        ...\n","2020-03-02 00:00:00     1938.0    89.0     2886.0\n","2020-03-02 12:00:00        NaN     NaN        NaN\n","2020-03-03 00:00:00     2535.0    75.0     2627.0\n","2020-03-03 12:00:00        NaN     NaN        NaN\n","2020-03-04 00:00:00     2280.0    94.0     2942.0\n","\n","[85 rows x 3 columns]"]},"metadata":{},"execution_count":134}]},{"cell_type":"code","source":["df_cum = df_time.resample('12h').sum(min_count=1)\n","df_cum"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":454},"id":"lXRkA3F1cj-b","executionInfo":{"status":"ok","timestamp":1641600421372,"user_tz":360,"elapsed":79,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"c0ae0956-b136-4df2-fc24-e4468284b01b"},"execution_count":135,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-aebd19fc-4b3d-45f4-8b27-38446566f819\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Confirmed</th>\n","      <th>Deaths</th>\n","      <th>Recovered</th>\n","    </tr>\n","    <tr>\n","      <th>ObservationDate</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-01-22 00:00:00</th>\n","      <td>555.0</td>\n","      <td>17.0</td>\n","      <td>28.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-22 12:00:00</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-23 00:00:00</th>\n","      <td>653.0</td>\n","      <td>18.0</td>\n","      <td>30.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-23 12:00:00</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-24 00:00:00</th>\n","      <td>941.0</td>\n","      <td>26.0</td>\n","      <td>36.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-02 00:00:00</th>\n","      <td>90309.0</td>\n","      <td>3085.0</td>\n","      <td>45602.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-02 12:00:00</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-03 00:00:00</th>\n","      <td>92844.0</td>\n","      <td>3160.0</td>\n","      <td>48229.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-03 12:00:00</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-04 00:00:00</th>\n","      <td>95124.0</td>\n","      <td>3254.0</td>\n","      <td>51171.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>85 rows Ã— 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-aebd19fc-4b3d-45f4-8b27-38446566f819')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-aebd19fc-4b3d-45f4-8b27-38446566f819 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-aebd19fc-4b3d-45f4-8b27-38446566f819');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["                     Confirmed  Deaths  Recovered\n","ObservationDate                                  \n","2020-01-22 00:00:00      555.0    17.0       28.0\n","2020-01-22 12:00:00        NaN     NaN        NaN\n","2020-01-23 00:00:00      653.0    18.0       30.0\n","2020-01-23 12:00:00        NaN     NaN        NaN\n","2020-01-24 00:00:00      941.0    26.0       36.0\n","...                        ...     ...        ...\n","2020-03-02 00:00:00    90309.0  3085.0    45602.0\n","2020-03-02 12:00:00        NaN     NaN        NaN\n","2020-03-03 00:00:00    92844.0  3160.0    48229.0\n","2020-03-03 12:00:00        NaN     NaN        NaN\n","2020-03-04 00:00:00    95124.0  3254.0    51171.0\n","\n","[85 rows x 3 columns]"]},"metadata":{},"execution_count":135}]},{"cell_type":"code","source":["#Copiando el valor siguiente dentro de los nulos\n","df_cum.bfill()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":454},"id":"xF40ybtRctn7","executionInfo":{"status":"ok","timestamp":1641600421377,"user_tz":360,"elapsed":82,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"2312e02c-3587-4fd1-e657-732a1ba6e059"},"execution_count":136,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-35bd5fb9-378c-4814-9c43-c9d03eb35ca0\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Confirmed</th>\n","      <th>Deaths</th>\n","      <th>Recovered</th>\n","    </tr>\n","    <tr>\n","      <th>ObservationDate</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-01-22 00:00:00</th>\n","      <td>555.0</td>\n","      <td>17.0</td>\n","      <td>28.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-22 12:00:00</th>\n","      <td>653.0</td>\n","      <td>18.0</td>\n","      <td>30.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-23 00:00:00</th>\n","      <td>653.0</td>\n","      <td>18.0</td>\n","      <td>30.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-23 12:00:00</th>\n","      <td>941.0</td>\n","      <td>26.0</td>\n","      <td>36.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-24 00:00:00</th>\n","      <td>941.0</td>\n","      <td>26.0</td>\n","      <td>36.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-02 00:00:00</th>\n","      <td>90309.0</td>\n","      <td>3085.0</td>\n","      <td>45602.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-02 12:00:00</th>\n","      <td>92844.0</td>\n","      <td>3160.0</td>\n","      <td>48229.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-03 00:00:00</th>\n","      <td>92844.0</td>\n","      <td>3160.0</td>\n","      <td>48229.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-03 12:00:00</th>\n","      <td>95124.0</td>\n","      <td>3254.0</td>\n","      <td>51171.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-04 00:00:00</th>\n","      <td>95124.0</td>\n","      <td>3254.0</td>\n","      <td>51171.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>85 rows Ã— 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-35bd5fb9-378c-4814-9c43-c9d03eb35ca0')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-35bd5fb9-378c-4814-9c43-c9d03eb35ca0 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-35bd5fb9-378c-4814-9c43-c9d03eb35ca0');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["                     Confirmed  Deaths  Recovered\n","ObservationDate                                  \n","2020-01-22 00:00:00      555.0    17.0       28.0\n","2020-01-22 12:00:00      653.0    18.0       30.0\n","2020-01-23 00:00:00      653.0    18.0       30.0\n","2020-01-23 12:00:00      941.0    26.0       36.0\n","2020-01-24 00:00:00      941.0    26.0       36.0\n","...                        ...     ...        ...\n","2020-03-02 00:00:00    90309.0  3085.0    45602.0\n","2020-03-02 12:00:00    92844.0  3160.0    48229.0\n","2020-03-03 00:00:00    92844.0  3160.0    48229.0\n","2020-03-03 12:00:00    95124.0  3254.0    51171.0\n","2020-03-04 00:00:00    95124.0  3254.0    51171.0\n","\n","[85 rows x 3 columns]"]},"metadata":{},"execution_count":136}]},{"cell_type":"code","source":["#Reemplazar con el valor que quiera\n","df_cum.fillna(15)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":454},"id":"g8bvYlhMeQ4U","executionInfo":{"status":"ok","timestamp":1641600421378,"user_tz":360,"elapsed":82,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"73839171-9bb7-4f5c-904f-504c9e318d58"},"execution_count":137,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-8cac56bd-42bd-4594-a4ff-5b7ffe236d32\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Confirmed</th>\n","      <th>Deaths</th>\n","      <th>Recovered</th>\n","    </tr>\n","    <tr>\n","      <th>ObservationDate</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-01-22 00:00:00</th>\n","      <td>555.0</td>\n","      <td>17.0</td>\n","      <td>28.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-22 12:00:00</th>\n","      <td>15.0</td>\n","      <td>15.0</td>\n","      <td>15.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-23 00:00:00</th>\n","      <td>653.0</td>\n","      <td>18.0</td>\n","      <td>30.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-23 12:00:00</th>\n","      <td>15.0</td>\n","      <td>15.0</td>\n","      <td>15.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-24 00:00:00</th>\n","      <td>941.0</td>\n","      <td>26.0</td>\n","      <td>36.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-02 00:00:00</th>\n","      <td>90309.0</td>\n","      <td>3085.0</td>\n","      <td>45602.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-02 12:00:00</th>\n","      <td>15.0</td>\n","      <td>15.0</td>\n","      <td>15.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-03 00:00:00</th>\n","      <td>92844.0</td>\n","      <td>3160.0</td>\n","      <td>48229.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-03 12:00:00</th>\n","      <td>15.0</td>\n","      <td>15.0</td>\n","      <td>15.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-04 00:00:00</th>\n","      <td>95124.0</td>\n","      <td>3254.0</td>\n","      <td>51171.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>85 rows Ã— 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8cac56bd-42bd-4594-a4ff-5b7ffe236d32')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8cac56bd-42bd-4594-a4ff-5b7ffe236d32 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8cac56bd-42bd-4594-a4ff-5b7ffe236d32');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["                     Confirmed  Deaths  Recovered\n","ObservationDate                                  \n","2020-01-22 00:00:00      555.0    17.0       28.0\n","2020-01-22 12:00:00       15.0    15.0       15.0\n","2020-01-23 00:00:00      653.0    18.0       30.0\n","2020-01-23 12:00:00       15.0    15.0       15.0\n","2020-01-24 00:00:00      941.0    26.0       36.0\n","...                        ...     ...        ...\n","2020-03-02 00:00:00    90309.0  3085.0    45602.0\n","2020-03-02 12:00:00       15.0    15.0       15.0\n","2020-03-03 00:00:00    92844.0  3160.0    48229.0\n","2020-03-03 12:00:00       15.0    15.0       15.0\n","2020-03-04 00:00:00    95124.0  3254.0    51171.0\n","\n","[85 rows x 3 columns]"]},"metadata":{},"execution_count":137}]},{"cell_type":"code","source":["#Interpolar valores medios de una fila hasta la otra\n","df_cum = df_cum.interpolate()\n","df_cum"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":454},"id":"FgzDwS1XenFX","executionInfo":{"status":"ok","timestamp":1641600421379,"user_tz":360,"elapsed":81,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"4dc78d26-2db8-486e-d007-7d06d70af8a0"},"execution_count":138,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-44d72a15-528a-488e-b883-4a686aabf51c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Confirmed</th>\n","      <th>Deaths</th>\n","      <th>Recovered</th>\n","    </tr>\n","    <tr>\n","      <th>ObservationDate</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-01-22 00:00:00</th>\n","      <td>555.0</td>\n","      <td>17.0</td>\n","      <td>28.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-22 12:00:00</th>\n","      <td>604.0</td>\n","      <td>17.5</td>\n","      <td>29.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-23 00:00:00</th>\n","      <td>653.0</td>\n","      <td>18.0</td>\n","      <td>30.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-23 12:00:00</th>\n","      <td>797.0</td>\n","      <td>22.0</td>\n","      <td>33.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-24 00:00:00</th>\n","      <td>941.0</td>\n","      <td>26.0</td>\n","      <td>36.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-02 00:00:00</th>\n","      <td>90309.0</td>\n","      <td>3085.0</td>\n","      <td>45602.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-02 12:00:00</th>\n","      <td>91576.5</td>\n","      <td>3122.5</td>\n","      <td>46915.5</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-03 00:00:00</th>\n","      <td>92844.0</td>\n","      <td>3160.0</td>\n","      <td>48229.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-03 12:00:00</th>\n","      <td>93984.0</td>\n","      <td>3207.0</td>\n","      <td>49700.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-04 00:00:00</th>\n","      <td>95124.0</td>\n","      <td>3254.0</td>\n","      <td>51171.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>85 rows Ã— 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-44d72a15-528a-488e-b883-4a686aabf51c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-44d72a15-528a-488e-b883-4a686aabf51c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-44d72a15-528a-488e-b883-4a686aabf51c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["                     Confirmed  Deaths  Recovered\n","ObservationDate                                  \n","2020-01-22 00:00:00      555.0    17.0       28.0\n","2020-01-22 12:00:00      604.0    17.5       29.0\n","2020-01-23 00:00:00      653.0    18.0       30.0\n","2020-01-23 12:00:00      797.0    22.0       33.0\n","2020-01-24 00:00:00      941.0    26.0       36.0\n","...                        ...     ...        ...\n","2020-03-02 00:00:00    90309.0  3085.0    45602.0\n","2020-03-02 12:00:00    91576.5  3122.5    46915.5\n","2020-03-03 00:00:00    92844.0  3160.0    48229.0\n","2020-03-03 12:00:00    93984.0  3207.0    49700.0\n","2020-03-04 00:00:00    95124.0  3254.0    51171.0\n","\n","[85 rows x 3 columns]"]},"metadata":{},"execution_count":138}]},{"cell_type":"code","source":["#Creando la tasa de supervivencia al covid\n","df_cum['rate'] = 1 - df_cum.Deaths / df_cum.Confirmed\n","df_cum"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":454},"id":"lip0qtaBe1je","executionInfo":{"status":"ok","timestamp":1641600421380,"user_tz":360,"elapsed":81,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"dd8a659b-dbce-4e22-e7df-17fadf29b50e"},"execution_count":139,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-ef12f4d7-d18b-4a97-9d76-1fc1be61e304\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Confirmed</th>\n","      <th>Deaths</th>\n","      <th>Recovered</th>\n","      <th>rate</th>\n","    </tr>\n","    <tr>\n","      <th>ObservationDate</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-01-22 00:00:00</th>\n","      <td>555.0</td>\n","      <td>17.0</td>\n","      <td>28.0</td>\n","      <td>0.969369</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-22 12:00:00</th>\n","      <td>604.0</td>\n","      <td>17.5</td>\n","      <td>29.0</td>\n","      <td>0.971026</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-23 00:00:00</th>\n","      <td>653.0</td>\n","      <td>18.0</td>\n","      <td>30.0</td>\n","      <td>0.972435</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-23 12:00:00</th>\n","      <td>797.0</td>\n","      <td>22.0</td>\n","      <td>33.0</td>\n","      <td>0.972396</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-24 00:00:00</th>\n","      <td>941.0</td>\n","      <td>26.0</td>\n","      <td>36.0</td>\n","      <td>0.972370</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-02 00:00:00</th>\n","      <td>90309.0</td>\n","      <td>3085.0</td>\n","      <td>45602.0</td>\n","      <td>0.965840</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-02 12:00:00</th>\n","      <td>91576.5</td>\n","      <td>3122.5</td>\n","      <td>46915.5</td>\n","      <td>0.965903</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-03 00:00:00</th>\n","      <td>92844.0</td>\n","      <td>3160.0</td>\n","      <td>48229.0</td>\n","      <td>0.965964</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-03 12:00:00</th>\n","      <td>93984.0</td>\n","      <td>3207.0</td>\n","      <td>49700.0</td>\n","      <td>0.965877</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-04 00:00:00</th>\n","      <td>95124.0</td>\n","      <td>3254.0</td>\n","      <td>51171.0</td>\n","      <td>0.965792</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>85 rows Ã— 4 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ef12f4d7-d18b-4a97-9d76-1fc1be61e304')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ef12f4d7-d18b-4a97-9d76-1fc1be61e304 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ef12f4d7-d18b-4a97-9d76-1fc1be61e304');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["                     Confirmed  Deaths  Recovered      rate\n","ObservationDate                                            \n","2020-01-22 00:00:00      555.0    17.0       28.0  0.969369\n","2020-01-22 12:00:00      604.0    17.5       29.0  0.971026\n","2020-01-23 00:00:00      653.0    18.0       30.0  0.972435\n","2020-01-23 12:00:00      797.0    22.0       33.0  0.972396\n","2020-01-24 00:00:00      941.0    26.0       36.0  0.972370\n","...                        ...     ...        ...       ...\n","2020-03-02 00:00:00    90309.0  3085.0    45602.0  0.965840\n","2020-03-02 12:00:00    91576.5  3122.5    46915.5  0.965903\n","2020-03-03 00:00:00    92844.0  3160.0    48229.0  0.965964\n","2020-03-03 12:00:00    93984.0  3207.0    49700.0  0.965877\n","2020-03-04 00:00:00    95124.0  3254.0    51171.0  0.965792\n","\n","[85 rows x 4 columns]"]},"metadata":{},"execution_count":139}]},{"cell_type":"code","source":["#Extraer informacion para cuando nuestra variable de tiempo no pertenece al indice\n","df_cum = df_cum.reset_index()\n","df_cum"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"Oi-7FCXffTXH","executionInfo":{"status":"ok","timestamp":1641600421381,"user_tz":360,"elapsed":81,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"aa3853ba-c7a5-4e19-9b3d-c72fe76b5f62"},"execution_count":140,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-d81e3491-d011-40bb-bf78-e169fc2f62d3\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ObservationDate</th>\n","      <th>Confirmed</th>\n","      <th>Deaths</th>\n","      <th>Recovered</th>\n","      <th>rate</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2020-01-22 00:00:00</td>\n","      <td>555.0</td>\n","      <td>17.0</td>\n","      <td>28.0</td>\n","      <td>0.969369</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2020-01-22 12:00:00</td>\n","      <td>604.0</td>\n","      <td>17.5</td>\n","      <td>29.0</td>\n","      <td>0.971026</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2020-01-23 00:00:00</td>\n","      <td>653.0</td>\n","      <td>18.0</td>\n","      <td>30.0</td>\n","      <td>0.972435</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2020-01-23 12:00:00</td>\n","      <td>797.0</td>\n","      <td>22.0</td>\n","      <td>33.0</td>\n","      <td>0.972396</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2020-01-24 00:00:00</td>\n","      <td>941.0</td>\n","      <td>26.0</td>\n","      <td>36.0</td>\n","      <td>0.972370</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>80</th>\n","      <td>2020-03-02 00:00:00</td>\n","      <td>90309.0</td>\n","      <td>3085.0</td>\n","      <td>45602.0</td>\n","      <td>0.965840</td>\n","    </tr>\n","    <tr>\n","      <th>81</th>\n","      <td>2020-03-02 12:00:00</td>\n","      <td>91576.5</td>\n","      <td>3122.5</td>\n","      <td>46915.5</td>\n","      <td>0.965903</td>\n","    </tr>\n","    <tr>\n","      <th>82</th>\n","      <td>2020-03-03 00:00:00</td>\n","      <td>92844.0</td>\n","      <td>3160.0</td>\n","      <td>48229.0</td>\n","      <td>0.965964</td>\n","    </tr>\n","    <tr>\n","      <th>83</th>\n","      <td>2020-03-03 12:00:00</td>\n","      <td>93984.0</td>\n","      <td>3207.0</td>\n","      <td>49700.0</td>\n","      <td>0.965877</td>\n","    </tr>\n","    <tr>\n","      <th>84</th>\n","      <td>2020-03-04 00:00:00</td>\n","      <td>95124.0</td>\n","      <td>3254.0</td>\n","      <td>51171.0</td>\n","      <td>0.965792</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>85 rows Ã— 5 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d81e3491-d011-40bb-bf78-e169fc2f62d3')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d81e3491-d011-40bb-bf78-e169fc2f62d3 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d81e3491-d011-40bb-bf78-e169fc2f62d3');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["       ObservationDate  Confirmed  Deaths  Recovered      rate\n","0  2020-01-22 00:00:00      555.0    17.0       28.0  0.969369\n","1  2020-01-22 12:00:00      604.0    17.5       29.0  0.971026\n","2  2020-01-23 00:00:00      653.0    18.0       30.0  0.972435\n","3  2020-01-23 12:00:00      797.0    22.0       33.0  0.972396\n","4  2020-01-24 00:00:00      941.0    26.0       36.0  0.972370\n","..                 ...        ...     ...        ...       ...\n","80 2020-03-02 00:00:00    90309.0  3085.0    45602.0  0.965840\n","81 2020-03-02 12:00:00    91576.5  3122.5    46915.5  0.965903\n","82 2020-03-03 00:00:00    92844.0  3160.0    48229.0  0.965964\n","83 2020-03-03 12:00:00    93984.0  3207.0    49700.0  0.965877\n","84 2020-03-04 00:00:00    95124.0  3254.0    51171.0  0.965792\n","\n","[85 rows x 5 columns]"]},"metadata":{},"execution_count":140}]},{"cell_type":"code","source":["#Usando pd.grouper\n","df_cum.groupby(pd.Grouper(key='ObservationDate', freq='M'))[['rate']].mean()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"xoua6d_ufk5F","executionInfo":{"status":"ok","timestamp":1641600421382,"user_tz":360,"elapsed":80,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"2c1e2298-4e8f-4dc1-cd11-f2ee809cb740"},"execution_count":141,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-04b76e7b-f520-4969-bdeb-f905dd13e3aa\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>rate</th>\n","    </tr>\n","    <tr>\n","      <th>ObservationDate</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-01-31</th>\n","      <td>0.974594</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-29</th>\n","      <td>0.973562</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-31</th>\n","      <td>0.965920</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-04b76e7b-f520-4969-bdeb-f905dd13e3aa')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-04b76e7b-f520-4969-bdeb-f905dd13e3aa button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-04b76e7b-f520-4969-bdeb-f905dd13e3aa');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["                     rate\n","ObservationDate          \n","2020-01-31       0.974594\n","2020-02-29       0.973562\n","2020-03-31       0.965920"]},"metadata":{},"execution_count":141}]},{"cell_type":"code","source":["sr = df_cum.groupby(pd.Grouper(key='ObservationDate', freq='1D'))[['rate']].mean()\n","sr.plot()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":332},"id":"9lF6h07RgRrb","executionInfo":{"status":"ok","timestamp":1641600422545,"user_tz":360,"elapsed":1242,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"f6a211c4-7f9d-4664-8aa8-8d762ace2f8d"},"execution_count":142,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fc1a23a1250>"]},"metadata":{},"execution_count":142},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["#Hacer promedios con ventanas de frecuencia usando rolling\n","sr.rolling(window=7).mean().plot()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":331},"id":"8_Q1Srzpg8na","executionInfo":{"status":"ok","timestamp":1641600422547,"user_tz":360,"elapsed":43,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"05fa4dbc-eddf-4060-8247-4d5160347e70"},"execution_count":143,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fc1a225db90>"]},"metadata":{},"execution_count":143},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","plt.plot(sr)\n","plt.plot(sr.rolling(window = 7).mean())\n","plt.plot(sr.rolling(window = 14).mean())\n","plt.plot(sr.rolling(window = 28).mean())\n","plt.xticks(rotation = '90')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":349},"id":"IkfCeVOShXEC","executionInfo":{"status":"ok","timestamp":1641600422548,"user_tz":360,"elapsed":27,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"31e32793-318d-4243-cf2b-f5d7c704acc2"},"execution_count":144,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([737446., 737456., 737463., 737470., 737477., 737485.]),\n"," <a list of 6 Text major ticklabel objects>)"]},"metadata":{},"execution_count":144},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["#Con desviacion estandar\n","sr.rolling(window = 7).std().plot()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":331},"id":"_IuypzwoiQhI","executionInfo":{"status":"ok","timestamp":1641600422549,"user_tz":360,"elapsed":23,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"3dc0807d-39f6-4c57-b210-eeeee0ffef14"},"execution_count":145,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fc1a2083bd0>"]},"metadata":{},"execution_count":145},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["#Con funcion lambda\n","sr.rolling(window=7).apply(lambda x: np.std(x)).plot()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":331},"id":"mPeMGfffi4Tf","executionInfo":{"status":"ok","timestamp":1641600423622,"user_tz":360,"elapsed":1093,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"74a612f0-0b14-42ec-d225-7981b9c813f3"},"execution_count":146,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fc1a1fbdcd0>"]},"metadata":{},"execution_count":146},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["**Comenzamos con analisis y viz**"],"metadata":{"id":"MSuCaPt6xqQ0"}},{"cell_type":"code","source":["df.groupby('Country/Region')['Confirmed'].max().sort_values(ascending=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-jz792-8jOxW","executionInfo":{"status":"ok","timestamp":1641600423627,"user_tz":360,"elapsed":47,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"62dd8104-12f7-40e9-82bc-3430c71cab35"},"execution_count":147,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Country/Region\n","Mainland China    67332.0\n","South Korea        5621.0\n","Italy              3089.0\n","Iran               2922.0\n","Others              706.0\n","                   ...   \n","Ivory Coast           1.0\n","Poland                1.0\n","Nigeria               1.0\n","Faroe Islands         1.0\n","Colombia              0.0\n","Name: Confirmed, Length: 90, dtype: float64"]},"metadata":{},"execution_count":147}]},{"cell_type":"code","source":["df_timed = df.groupby(['Country/Region', pd.Grouper(key='ObservationDate', freq='1D')]).sum()\n","df_timed"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":454},"id":"EWxNkKDP3Jm4","executionInfo":{"status":"ok","timestamp":1641600423632,"user_tz":360,"elapsed":45,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"5211c84c-2bee-49b0-c597-c451b23b52ed"},"execution_count":148,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-f7f407d1-f6c7-495e-953b-cf655ad10d65\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>Confirmed</th>\n","      <th>Deaths</th>\n","      <th>Recovered</th>\n","    </tr>\n","    <tr>\n","      <th>Country/Region</th>\n","      <th>ObservationDate</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Azerbaijan</th>\n","      <th>2020-02-28</th>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"4\" valign=\"top\">Afghanistan</th>\n","      <th>2020-02-24</th>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-25</th>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-26</th>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-27</th>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"5\" valign=\"top\">Vietnam</th>\n","      <th>2020-02-29</th>\n","      <td>16.0</td>\n","      <td>0.0</td>\n","      <td>16.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-01</th>\n","      <td>16.0</td>\n","      <td>0.0</td>\n","      <td>16.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-02</th>\n","      <td>16.0</td>\n","      <td>0.0</td>\n","      <td>16.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-03</th>\n","      <td>16.0</td>\n","      <td>0.0</td>\n","      <td>16.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-04</th>\n","      <td>16.0</td>\n","      <td>0.0</td>\n","      <td>16.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1462 rows Ã— 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f7f407d1-f6c7-495e-953b-cf655ad10d65')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f7f407d1-f6c7-495e-953b-cf655ad10d65 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f7f407d1-f6c7-495e-953b-cf655ad10d65');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["                                Confirmed  Deaths  Recovered\n","Country/Region ObservationDate                              \n"," Azerbaijan    2020-02-28             1.0     0.0        0.0\n","Afghanistan    2020-02-24             1.0     0.0        0.0\n","               2020-02-25             1.0     0.0        0.0\n","               2020-02-26             1.0     0.0        0.0\n","               2020-02-27             1.0     0.0        0.0\n","...                                   ...     ...        ...\n","Vietnam        2020-02-29            16.0     0.0       16.0\n","               2020-03-01            16.0     0.0       16.0\n","               2020-03-02            16.0     0.0       16.0\n","               2020-03-03            16.0     0.0       16.0\n","               2020-03-04            16.0     0.0       16.0\n","\n","[1462 rows x 3 columns]"]},"metadata":{},"execution_count":148}]},{"cell_type":"code","source":["df_timed.loc['Mexico']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"XrVBDbNy39zv","executionInfo":{"status":"ok","timestamp":1641600423636,"user_tz":360,"elapsed":43,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"f8582e19-64bd-4ece-f229-3b167bb7152d"},"execution_count":149,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-ec52cd86-c204-484e-93da-637b28e0def2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Confirmed</th>\n","      <th>Deaths</th>\n","      <th>Recovered</th>\n","    </tr>\n","    <tr>\n","      <th>ObservationDate</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-01-23</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-28</th>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-29</th>\n","      <td>4.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-01</th>\n","      <td>5.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-02</th>\n","      <td>5.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-03</th>\n","      <td>5.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-04</th>\n","      <td>5.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ec52cd86-c204-484e-93da-637b28e0def2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ec52cd86-c204-484e-93da-637b28e0def2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ec52cd86-c204-484e-93da-637b28e0def2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["                 Confirmed  Deaths  Recovered\n","ObservationDate                              \n","2020-01-23             0.0     0.0        0.0\n","2020-02-28             1.0     0.0        0.0\n","2020-02-29             4.0     0.0        0.0\n","2020-03-01             5.0     0.0        0.0\n","2020-03-02             5.0     0.0        0.0\n","2020-03-03             5.0     0.0        1.0\n","2020-03-04             5.0     0.0        1.0"]},"metadata":{},"execution_count":149}]},{"cell_type":"code","source":["df_china = df_timed.loc['Mainland China',:]\n","df_china"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"m5Pir3PG4URu","executionInfo":{"status":"ok","timestamp":1641600423640,"user_tz":360,"elapsed":45,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"3c0006ad-9b60-47d8-fd16-c3cfb156e496"},"execution_count":150,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-88f73014-acdf-421b-83db-051689035ace\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Confirmed</th>\n","      <th>Deaths</th>\n","      <th>Recovered</th>\n","    </tr>\n","    <tr>\n","      <th>ObservationDate</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-01-22</th>\n","      <td>547.0</td>\n","      <td>17.0</td>\n","      <td>28.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-23</th>\n","      <td>639.0</td>\n","      <td>18.0</td>\n","      <td>30.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-24</th>\n","      <td>916.0</td>\n","      <td>26.0</td>\n","      <td>36.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-25</th>\n","      <td>1399.0</td>\n","      <td>42.0</td>\n","      <td>39.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-26</th>\n","      <td>2062.0</td>\n","      <td>56.0</td>\n","      <td>49.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-27</th>\n","      <td>2863.0</td>\n","      <td>82.0</td>\n","      <td>58.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-28</th>\n","      <td>5494.0</td>\n","      <td>131.0</td>\n","      <td>101.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-29</th>\n","      <td>6070.0</td>\n","      <td>133.0</td>\n","      <td>120.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-30</th>\n","      <td>8124.0</td>\n","      <td>171.0</td>\n","      <td>135.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-31</th>\n","      <td>9783.0</td>\n","      <td>213.0</td>\n","      <td>214.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-01</th>\n","      <td>11871.0</td>\n","      <td>259.0</td>\n","      <td>275.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-02</th>\n","      <td>16607.0</td>\n","      <td>361.0</td>\n","      <td>463.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-03</th>\n","      <td>19693.0</td>\n","      <td>425.0</td>\n","      <td>614.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-04</th>\n","      <td>23680.0</td>\n","      <td>490.0</td>\n","      <td>843.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-05</th>\n","      <td>27409.0</td>\n","      <td>562.0</td>\n","      <td>1115.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-06</th>\n","      <td>30553.0</td>\n","      <td>632.0</td>\n","      <td>1476.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-07</th>\n","      <td>34075.0</td>\n","      <td>717.0</td>\n","      <td>1998.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-08</th>\n","      <td>36778.0</td>\n","      <td>804.0</td>\n","      <td>2595.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-09</th>\n","      <td>39790.0</td>\n","      <td>904.0</td>\n","      <td>3218.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-10</th>\n","      <td>42306.0</td>\n","      <td>1011.0</td>\n","      <td>3917.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-11</th>\n","      <td>44327.0</td>\n","      <td>1111.0</td>\n","      <td>4635.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-12</th>\n","      <td>44699.0</td>\n","      <td>1116.0</td>\n","      <td>5079.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-13</th>\n","      <td>59832.0</td>\n","      <td>1368.0</td>\n","      <td>6213.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-14</th>\n","      <td>66292.0</td>\n","      <td>1520.0</td>\n","      <td>7973.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-15</th>\n","      <td>68347.0</td>\n","      <td>1662.0</td>\n","      <td>9294.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-16</th>\n","      <td>70446.0</td>\n","      <td>1765.0</td>\n","      <td>10748.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-17</th>\n","      <td>72364.0</td>\n","      <td>1863.0</td>\n","      <td>12455.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-18</th>\n","      <td>74139.0</td>\n","      <td>2002.0</td>\n","      <td>14199.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-19</th>\n","      <td>74546.0</td>\n","      <td>2114.0</td>\n","      <td>15952.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-20</th>\n","      <td>74999.0</td>\n","      <td>2236.0</td>\n","      <td>18002.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-21</th>\n","      <td>75472.0</td>\n","      <td>2236.0</td>\n","      <td>18693.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-22</th>\n","      <td>76922.0</td>\n","      <td>2441.0</td>\n","      <td>22687.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-23</th>\n","      <td>76938.0</td>\n","      <td>2443.0</td>\n","      <td>23170.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-24</th>\n","      <td>77152.0</td>\n","      <td>2593.0</td>\n","      <td>24990.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-25</th>\n","      <td>77660.0</td>\n","      <td>2663.0</td>\n","      <td>27650.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-26</th>\n","      <td>78065.0</td>\n","      <td>2715.0</td>\n","      <td>30053.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-27</th>\n","      <td>78498.0</td>\n","      <td>2744.0</td>\n","      <td>32898.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-28</th>\n","      <td>78824.0</td>\n","      <td>2788.0</td>\n","      <td>36291.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-29</th>\n","      <td>79251.0</td>\n","      <td>2835.0</td>\n","      <td>39279.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-01</th>\n","      <td>79826.0</td>\n","      <td>2870.0</td>\n","      <td>42118.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-02</th>\n","      <td>80026.0</td>\n","      <td>2912.0</td>\n","      <td>44810.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-03</th>\n","      <td>80151.0</td>\n","      <td>2945.0</td>\n","      <td>47404.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-04</th>\n","      <td>80271.0</td>\n","      <td>2981.0</td>\n","      <td>49955.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-88f73014-acdf-421b-83db-051689035ace')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-88f73014-acdf-421b-83db-051689035ace button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-88f73014-acdf-421b-83db-051689035ace');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["                 Confirmed  Deaths  Recovered\n","ObservationDate                              \n","2020-01-22           547.0    17.0       28.0\n","2020-01-23           639.0    18.0       30.0\n","2020-01-24           916.0    26.0       36.0\n","2020-01-25          1399.0    42.0       39.0\n","2020-01-26          2062.0    56.0       49.0\n","2020-01-27          2863.0    82.0       58.0\n","2020-01-28          5494.0   131.0      101.0\n","2020-01-29          6070.0   133.0      120.0\n","2020-01-30          8124.0   171.0      135.0\n","2020-01-31          9783.0   213.0      214.0\n","2020-02-01         11871.0   259.0      275.0\n","2020-02-02         16607.0   361.0      463.0\n","2020-02-03         19693.0   425.0      614.0\n","2020-02-04         23680.0   490.0      843.0\n","2020-02-05         27409.0   562.0     1115.0\n","2020-02-06         30553.0   632.0     1476.0\n","2020-02-07         34075.0   717.0     1998.0\n","2020-02-08         36778.0   804.0     2595.0\n","2020-02-09         39790.0   904.0     3218.0\n","2020-02-10         42306.0  1011.0     3917.0\n","2020-02-11         44327.0  1111.0     4635.0\n","2020-02-12         44699.0  1116.0     5079.0\n","2020-02-13         59832.0  1368.0     6213.0\n","2020-02-14         66292.0  1520.0     7973.0\n","2020-02-15         68347.0  1662.0     9294.0\n","2020-02-16         70446.0  1765.0    10748.0\n","2020-02-17         72364.0  1863.0    12455.0\n","2020-02-18         74139.0  2002.0    14199.0\n","2020-02-19         74546.0  2114.0    15952.0\n","2020-02-20         74999.0  2236.0    18002.0\n","2020-02-21         75472.0  2236.0    18693.0\n","2020-02-22         76922.0  2441.0    22687.0\n","2020-02-23         76938.0  2443.0    23170.0\n","2020-02-24         77152.0  2593.0    24990.0\n","2020-02-25         77660.0  2663.0    27650.0\n","2020-02-26         78065.0  2715.0    30053.0\n","2020-02-27         78498.0  2744.0    32898.0\n","2020-02-28         78824.0  2788.0    36291.0\n","2020-02-29         79251.0  2835.0    39279.0\n","2020-03-01         79826.0  2870.0    42118.0\n","2020-03-02         80026.0  2912.0    44810.0\n","2020-03-03         80151.0  2945.0    47404.0\n","2020-03-04         80271.0  2981.0    49955.0"]},"metadata":{},"execution_count":150}]},{"cell_type":"code","source":["df_china.plot(figsize=(10,7), title='COV-19 China')\n","plt.xlabel('Date')\n","plt.ylabel('People')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":493},"id":"0tcPApUa4jc0","executionInfo":{"status":"ok","timestamp":1641600423645,"user_tz":360,"elapsed":47,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"1a6c1d24-7e49-422e-ec67-ab16b972a8f9"},"execution_count":151,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 720x504 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["ax = df_china.plot(figsize=(10,7), \n","              title='COV-19 China',\n","              legend=False,\n","              style= ['r-', 'g--', 'b:*'])\n","ax.legend(['I', 'dos', '3'])\n","plt.xlabel('Date')\n","plt.ylabel('People')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":493},"id":"DuJdVI2X5T61","executionInfo":{"status":"ok","timestamp":1641600424449,"user_tz":360,"elapsed":850,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"906ce0a5-19fb-47cd-c6d2-dfebe372e5d7"},"execution_count":152,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 720x504 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["df_monthly = df_china.resample('M').max()\n","df_monthly"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"TDjVr7rA69x4","executionInfo":{"status":"ok","timestamp":1641600424450,"user_tz":360,"elapsed":69,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"48cdd737-0189-43c4-ca2a-6f348318a4a9"},"execution_count":153,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-598c1837-71c8-4718-8ca2-cf18d529c1b9\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Confirmed</th>\n","      <th>Deaths</th>\n","      <th>Recovered</th>\n","    </tr>\n","    <tr>\n","      <th>ObservationDate</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-01-31</th>\n","      <td>9783.0</td>\n","      <td>213.0</td>\n","      <td>214.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-29</th>\n","      <td>79251.0</td>\n","      <td>2835.0</td>\n","      <td>39279.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-31</th>\n","      <td>80271.0</td>\n","      <td>2981.0</td>\n","      <td>49955.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-598c1837-71c8-4718-8ca2-cf18d529c1b9')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-598c1837-71c8-4718-8ca2-cf18d529c1b9 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-598c1837-71c8-4718-8ca2-cf18d529c1b9');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["                 Confirmed  Deaths  Recovered\n","ObservationDate                              \n","2020-01-31          9783.0   213.0      214.0\n","2020-02-29         79251.0  2835.0    39279.0\n","2020-03-31         80271.0  2981.0    49955.0"]},"metadata":{},"execution_count":153}]},{"cell_type":"code","source":["df_monthly.plot(kind='bar')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":391},"id":"hQuGU_EV8NMP","executionInfo":{"status":"ok","timestamp":1641600424451,"user_tz":360,"elapsed":67,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"e4fd8fca-88f3-462d-a09e-ecdac22b32d8"},"execution_count":154,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fc1a1df0c50>"]},"metadata":{},"execution_count":154},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["df_monthly.plot(kind='bar', stacked=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":391},"id":"5u2jEbvw8bhO","executionInfo":{"status":"ok","timestamp":1641600424452,"user_tz":360,"elapsed":54,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"82ea4ccf-c7a3-4fb1-e259-0632ca335dd1"},"execution_count":155,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fc1a1c9de10>"]},"metadata":{},"execution_count":155},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["df_monthly['Threated']= df_monthly['Confirmed'] - df_monthly['Deaths'] - df_monthly['Recovered']\n","df_monthly"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"7ktY7yNG8xlV","executionInfo":{"status":"ok","timestamp":1641600424454,"user_tz":360,"elapsed":51,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"b3e2a66b-4a54-4bba-ecbe-e8b3a15a1622"},"execution_count":156,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-9aa710a8-1354-4fe5-a997-25a60a6769f7\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Confirmed</th>\n","      <th>Deaths</th>\n","      <th>Recovered</th>\n","      <th>Threated</th>\n","    </tr>\n","    <tr>\n","      <th>ObservationDate</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-01-31</th>\n","      <td>9783.0</td>\n","      <td>213.0</td>\n","      <td>214.0</td>\n","      <td>9356.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-29</th>\n","      <td>79251.0</td>\n","      <td>2835.0</td>\n","      <td>39279.0</td>\n","      <td>37137.0</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-31</th>\n","      <td>80271.0</td>\n","      <td>2981.0</td>\n","      <td>49955.0</td>\n","      <td>27335.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9aa710a8-1354-4fe5-a997-25a60a6769f7')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9aa710a8-1354-4fe5-a997-25a60a6769f7 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9aa710a8-1354-4fe5-a997-25a60a6769f7');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["                 Confirmed  Deaths  Recovered  Threated\n","ObservationDate                                        \n","2020-01-31          9783.0   213.0      214.0    9356.0\n","2020-02-29         79251.0  2835.0    39279.0   37137.0\n","2020-03-31         80271.0  2981.0    49955.0   27335.0"]},"metadata":{},"execution_count":156}]},{"cell_type":"code","source":["df_monthly[['Deaths', 'Recovered', 'Threated']].T.plot(figsize=(10,7), kind='pie', subplots=True, legend=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":264},"id":"Ce0HIIUp9U2E","executionInfo":{"status":"ok","timestamp":1641600424455,"user_tz":360,"elapsed":50,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"6d7eb118-021c-4d37-df55-739f3f27aba9"},"execution_count":157,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([<matplotlib.axes._subplots.AxesSubplot object at 0x7fc1a1fd3d90>,\n","       <matplotlib.axes._subplots.AxesSubplot object at 0x7fc1a20e81d0>,\n","       <matplotlib.axes._subplots.AxesSubplot object at 0x7fc1a1e96d90>],\n","      dtype=object)"]},"metadata":{},"execution_count":157},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 720x504 with 3 Axes>"]},"metadata":{}}]},{"cell_type":"code","source":["#Tasa de supervivencia\n","df_china['rate'] = 1- df_china['Deaths']/df_china['Confirmed']\n","df_china"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"dp21_2yr9zs8","executionInfo":{"status":"ok","timestamp":1641600433167,"user_tz":360,"elapsed":801,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"c3964f27-8292-4b0e-be87-70cba5550e42"},"execution_count":159,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-e1dbacf2-90b8-419d-a2e1-34126e4374a6\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Confirmed</th>\n","      <th>Deaths</th>\n","      <th>Recovered</th>\n","      <th>rate</th>\n","    </tr>\n","    <tr>\n","      <th>ObservationDate</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-01-22</th>\n","      <td>547.0</td>\n","      <td>17.0</td>\n","      <td>28.0</td>\n","      <td>0.968921</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-23</th>\n","      <td>639.0</td>\n","      <td>18.0</td>\n","      <td>30.0</td>\n","      <td>0.971831</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-24</th>\n","      <td>916.0</td>\n","      <td>26.0</td>\n","      <td>36.0</td>\n","      <td>0.971616</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-25</th>\n","      <td>1399.0</td>\n","      <td>42.0</td>\n","      <td>39.0</td>\n","      <td>0.969979</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-26</th>\n","      <td>2062.0</td>\n","      <td>56.0</td>\n","      <td>49.0</td>\n","      <td>0.972842</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-27</th>\n","      <td>2863.0</td>\n","      <td>82.0</td>\n","      <td>58.0</td>\n","      <td>0.971359</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-28</th>\n","      <td>5494.0</td>\n","      <td>131.0</td>\n","      <td>101.0</td>\n","      <td>0.976156</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-29</th>\n","      <td>6070.0</td>\n","      <td>133.0</td>\n","      <td>120.0</td>\n","      <td>0.978089</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-30</th>\n","      <td>8124.0</td>\n","      <td>171.0</td>\n","      <td>135.0</td>\n","      <td>0.978951</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-31</th>\n","      <td>9783.0</td>\n","      <td>213.0</td>\n","      <td>214.0</td>\n","      <td>0.978228</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-01</th>\n","      <td>11871.0</td>\n","      <td>259.0</td>\n","      <td>275.0</td>\n","      <td>0.978182</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-02</th>\n","      <td>16607.0</td>\n","      <td>361.0</td>\n","      <td>463.0</td>\n","      <td>0.978262</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-03</th>\n","      <td>19693.0</td>\n","      <td>425.0</td>\n","      <td>614.0</td>\n","      <td>0.978419</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-04</th>\n","      <td>23680.0</td>\n","      <td>490.0</td>\n","      <td>843.0</td>\n","      <td>0.979307</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-05</th>\n","      <td>27409.0</td>\n","      <td>562.0</td>\n","      <td>1115.0</td>\n","      <td>0.979496</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-06</th>\n","      <td>30553.0</td>\n","      <td>632.0</td>\n","      <td>1476.0</td>\n","      <td>0.979315</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-07</th>\n","      <td>34075.0</td>\n","      <td>717.0</td>\n","      <td>1998.0</td>\n","      <td>0.978958</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-08</th>\n","      <td>36778.0</td>\n","      <td>804.0</td>\n","      <td>2595.0</td>\n","      <td>0.978139</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-09</th>\n","      <td>39790.0</td>\n","      <td>904.0</td>\n","      <td>3218.0</td>\n","      <td>0.977281</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-10</th>\n","      <td>42306.0</td>\n","      <td>1011.0</td>\n","      <td>3917.0</td>\n","      <td>0.976103</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-11</th>\n","      <td>44327.0</td>\n","      <td>1111.0</td>\n","      <td>4635.0</td>\n","      <td>0.974936</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-12</th>\n","      <td>44699.0</td>\n","      <td>1116.0</td>\n","      <td>5079.0</td>\n","      <td>0.975033</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-13</th>\n","      <td>59832.0</td>\n","      <td>1368.0</td>\n","      <td>6213.0</td>\n","      <td>0.977136</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-14</th>\n","      <td>66292.0</td>\n","      <td>1520.0</td>\n","      <td>7973.0</td>\n","      <td>0.977071</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-15</th>\n","      <td>68347.0</td>\n","      <td>1662.0</td>\n","      <td>9294.0</td>\n","      <td>0.975683</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-16</th>\n","      <td>70446.0</td>\n","      <td>1765.0</td>\n","      <td>10748.0</td>\n","      <td>0.974945</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-17</th>\n","      <td>72364.0</td>\n","      <td>1863.0</td>\n","      <td>12455.0</td>\n","      <td>0.974255</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-18</th>\n","      <td>74139.0</td>\n","      <td>2002.0</td>\n","      <td>14199.0</td>\n","      <td>0.972997</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-19</th>\n","      <td>74546.0</td>\n","      <td>2114.0</td>\n","      <td>15952.0</td>\n","      <td>0.971642</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-20</th>\n","      <td>74999.0</td>\n","      <td>2236.0</td>\n","      <td>18002.0</td>\n","      <td>0.970186</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-21</th>\n","      <td>75472.0</td>\n","      <td>2236.0</td>\n","      <td>18693.0</td>\n","      <td>0.970373</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-22</th>\n","      <td>76922.0</td>\n","      <td>2441.0</td>\n","      <td>22687.0</td>\n","      <td>0.968267</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-23</th>\n","      <td>76938.0</td>\n","      <td>2443.0</td>\n","      <td>23170.0</td>\n","      <td>0.968247</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-24</th>\n","      <td>77152.0</td>\n","      <td>2593.0</td>\n","      <td>24990.0</td>\n","      <td>0.966391</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-25</th>\n","      <td>77660.0</td>\n","      <td>2663.0</td>\n","      <td>27650.0</td>\n","      <td>0.965710</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-26</th>\n","      <td>78065.0</td>\n","      <td>2715.0</td>\n","      <td>30053.0</td>\n","      <td>0.965221</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-27</th>\n","      <td>78498.0</td>\n","      <td>2744.0</td>\n","      <td>32898.0</td>\n","      <td>0.965044</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-28</th>\n","      <td>78824.0</td>\n","      <td>2788.0</td>\n","      <td>36291.0</td>\n","      <td>0.964630</td>\n","    </tr>\n","    <tr>\n","      <th>2020-02-29</th>\n","      <td>79251.0</td>\n","      <td>2835.0</td>\n","      <td>39279.0</td>\n","      <td>0.964228</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-01</th>\n","      <td>79826.0</td>\n","      <td>2870.0</td>\n","      <td>42118.0</td>\n","      <td>0.964047</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-02</th>\n","      <td>80026.0</td>\n","      <td>2912.0</td>\n","      <td>44810.0</td>\n","      <td>0.963612</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-03</th>\n","      <td>80151.0</td>\n","      <td>2945.0</td>\n","      <td>47404.0</td>\n","      <td>0.963257</td>\n","    </tr>\n","    <tr>\n","      <th>2020-03-04</th>\n","      <td>80271.0</td>\n","      <td>2981.0</td>\n","      <td>49955.0</td>\n","      <td>0.962863</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e1dbacf2-90b8-419d-a2e1-34126e4374a6')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e1dbacf2-90b8-419d-a2e1-34126e4374a6 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e1dbacf2-90b8-419d-a2e1-34126e4374a6');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["                 Confirmed  Deaths  Recovered      rate\n","ObservationDate                                        \n","2020-01-22           547.0    17.0       28.0  0.968921\n","2020-01-23           639.0    18.0       30.0  0.971831\n","2020-01-24           916.0    26.0       36.0  0.971616\n","2020-01-25          1399.0    42.0       39.0  0.969979\n","2020-01-26          2062.0    56.0       49.0  0.972842\n","2020-01-27          2863.0    82.0       58.0  0.971359\n","2020-01-28          5494.0   131.0      101.0  0.976156\n","2020-01-29          6070.0   133.0      120.0  0.978089\n","2020-01-30          8124.0   171.0      135.0  0.978951\n","2020-01-31          9783.0   213.0      214.0  0.978228\n","2020-02-01         11871.0   259.0      275.0  0.978182\n","2020-02-02         16607.0   361.0      463.0  0.978262\n","2020-02-03         19693.0   425.0      614.0  0.978419\n","2020-02-04         23680.0   490.0      843.0  0.979307\n","2020-02-05         27409.0   562.0     1115.0  0.979496\n","2020-02-06         30553.0   632.0     1476.0  0.979315\n","2020-02-07         34075.0   717.0     1998.0  0.978958\n","2020-02-08         36778.0   804.0     2595.0  0.978139\n","2020-02-09         39790.0   904.0     3218.0  0.977281\n","2020-02-10         42306.0  1011.0     3917.0  0.976103\n","2020-02-11         44327.0  1111.0     4635.0  0.974936\n","2020-02-12         44699.0  1116.0     5079.0  0.975033\n","2020-02-13         59832.0  1368.0     6213.0  0.977136\n","2020-02-14         66292.0  1520.0     7973.0  0.977071\n","2020-02-15         68347.0  1662.0     9294.0  0.975683\n","2020-02-16         70446.0  1765.0    10748.0  0.974945\n","2020-02-17         72364.0  1863.0    12455.0  0.974255\n","2020-02-18         74139.0  2002.0    14199.0  0.972997\n","2020-02-19         74546.0  2114.0    15952.0  0.971642\n","2020-02-20         74999.0  2236.0    18002.0  0.970186\n","2020-02-21         75472.0  2236.0    18693.0  0.970373\n","2020-02-22         76922.0  2441.0    22687.0  0.968267\n","2020-02-23         76938.0  2443.0    23170.0  0.968247\n","2020-02-24         77152.0  2593.0    24990.0  0.966391\n","2020-02-25         77660.0  2663.0    27650.0  0.965710\n","2020-02-26         78065.0  2715.0    30053.0  0.965221\n","2020-02-27         78498.0  2744.0    32898.0  0.965044\n","2020-02-28         78824.0  2788.0    36291.0  0.964630\n","2020-02-29         79251.0  2835.0    39279.0  0.964228\n","2020-03-01         79826.0  2870.0    42118.0  0.964047\n","2020-03-02         80026.0  2912.0    44810.0  0.963612\n","2020-03-03         80151.0  2945.0    47404.0  0.963257\n","2020-03-04         80271.0  2981.0    49955.0  0.962863"]},"metadata":{},"execution_count":159}]},{"cell_type":"code","source":["df_china['rate'].hist(figsize=(10,7), bins=10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":445},"id":"q1v91sT-_Gth","executionInfo":{"status":"ok","timestamp":1641600511886,"user_tz":360,"elapsed":462,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"3d85b391-e883-46b0-b152-6d1147a2552d"},"execution_count":161,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fc1a1b0b710>"]},"metadata":{},"execution_count":161},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 720x504 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["df_china['rate'].hist(figsize=(10,7), bins=10, normed=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":723},"id":"ScEaiPykA5s2","executionInfo":{"status":"error","timestamp":1641600595761,"user_tz":360,"elapsed":232,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"b6154f7c-1c49-4a0f-f5f1-a8a0edd2dcdd"},"execution_count":162,"outputs":[{"output_type":"error","ename":"AttributeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-162-49fede6dabd6>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdf_china\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'rate'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfigsize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m7\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbins\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnormed\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/plotting/_core.py\u001b[0m in \u001b[0;36mhist_series\u001b[0;34m(self, by, ax, grid, xlabelsize, xrot, ylabelsize, yrot, figsize, bins, backend, legend, **kwargs)\u001b[0m\n\u001b[1;32m     95\u001b[0m         \u001b[0mbins\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mbins\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     96\u001b[0m         \u001b[0mlegend\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlegend\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 97\u001b[0;31m         \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     98\u001b[0m     )\n\u001b[1;32m     99\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/plotting/_matplotlib/hist.py\u001b[0m in \u001b[0;36mhist_series\u001b[0;34m(self, by, ax, grid, xlabelsize, xrot, ylabelsize, yrot, figsize, bins, legend, **kwds)\u001b[0m\n\u001b[1;32m    327\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mlegend\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    328\u001b[0m             \u001b[0mkwds\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"label\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 329\u001b[0;31m         \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbins\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mbins\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    330\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mlegend\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    331\u001b[0m             \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlegend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/matplotlib/__init__.py\u001b[0m in \u001b[0;36minner\u001b[0;34m(ax, data, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1563\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0minner\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0max\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1564\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mdata\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1565\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0max\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0mmap\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msanitize_sequence\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1566\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1567\u001b[0m         \u001b[0mbound\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnew_sig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbind\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0max\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/matplotlib/axes/_axes.py\u001b[0m in \u001b[0;36mhist\u001b[0;34m(self, x, bins, range, density, weights, cumulative, bottom, histtype, align, orientation, rwidth, log, color, label, stacked, **kwargs)\u001b[0m\n\u001b[1;32m   6817\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mpatch\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6818\u001b[0m                 \u001b[0mp\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpatch\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 6819\u001b[0;31m                 \u001b[0mp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   6820\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0mlbl\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6821\u001b[0m                     \u001b[0mp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_label\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlbl\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/matplotlib/artist.py\u001b[0m in \u001b[0;36mupdate\u001b[0;34m(self, props)\u001b[0m\n\u001b[1;32m   1004\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1005\u001b[0m         \u001b[0;32mwith\u001b[0m \u001b[0mcbook\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_setattr_cm\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0meventson\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1006\u001b[0;31m             \u001b[0mret\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0m_update_property\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mk\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mv\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mk\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mv\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mprops\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1007\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1008\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mret\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/matplotlib/artist.py\u001b[0m in \u001b[0;36m<listcomp>\u001b[0;34m(.0)\u001b[0m\n\u001b[1;32m   1004\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1005\u001b[0m         \u001b[0;32mwith\u001b[0m \u001b[0mcbook\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_setattr_cm\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0meventson\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1006\u001b[0;31m             \u001b[0mret\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0m_update_property\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mk\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mv\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mk\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mv\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mprops\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1007\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1008\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mret\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/matplotlib/artist.py\u001b[0m in \u001b[0;36m_update_property\u001b[0;34m(self, k, v)\u001b[0m\n\u001b[1;32m   1000\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mcallable\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1001\u001b[0m                     raise AttributeError('{!r} object has no property {!r}'\n\u001b[0;32m-> 1002\u001b[0;31m                                          .format(type(self).__name__, k))\n\u001b[0m\u001b[1;32m   1003\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mv\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1004\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mAttributeError\u001b[0m: 'Rectangle' object has no property 'normed'"]},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 720x504 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["df_china['rate'].plot(kind='kde', figsize=(10,7))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":445},"id":"RlWK-szwBTTt","executionInfo":{"status":"ok","timestamp":1641600777974,"user_tz":360,"elapsed":292,"user":{"displayName":"Fer Mavec","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06686205667122495301"}},"outputId":"20342d35-f4b6-4492-92e9-ca1a01a8fe5f"},"execution_count":166,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fc19178ea90>"]},"metadata":{},"execution_count":166},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 720x504 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":[""],"metadata":{"id":"mPqz_pb0Bxyc"},"execution_count":null,"outputs":[]}]}